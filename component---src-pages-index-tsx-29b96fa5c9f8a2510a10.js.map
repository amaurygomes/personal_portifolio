{"version":3,"file":"component---src-pages-index-tsx-29b96fa5c9f8a2510a10.js","mappings":"8KAUO,MAAMA,EAA4CC,IAAoC,IAAnC,MAAEC,EAAK,QAAEC,EAAO,UAAEC,GAAW,EAEnF,MAAMC,EAAY,CACdC,QAAS,CAAEC,QAAS,EAAGC,GAAI,KAC3BC,YAAa,CAAEF,QAAS,EAAGC,EAAG,GAC9BE,KAAM,CAAEH,QAAS,EAAGC,GAAI,MAI5B,OACIG,EAAAA,cAAAA,MAAAA,CAAKP,WAAWQ,EAAAA,EAAAA,IAAG,sBAAuBR,IACtCO,EAAAA,cAACE,EAAAA,EAAOC,KAAI,eAACV,UAAU,sCACfC,EAAS,CACbU,WAAY,CAAEC,SAAU,MACtB,kBAAiBb,KAEvBQ,EAAAA,cAACE,EAAAA,EAAOI,GAAE,eAACb,UAAU,wBACbC,EAAS,CACbU,WAAY,CAAEC,SAAU,GAAKE,MAAO,MAEnChB,GAGH,C,kIC1BP,MAAMiB,EAA8BlB,IAAwB,IAAvB,KAAEmB,KAASC,GAAM,EACzD,OACIV,EAAAA,cAACE,EAAAA,EAAOC,KAAI,eACRV,UAAU,8EACNiB,GAEHD,EACS,E,qDCLf,MAAME,EAAc,IAanBX,EAAAA,cAAAA,UAAAA,CAASP,UAAU,qIACfO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,2EAEXO,EAAAA,cAACE,EAAAA,EAAOU,IAAG,CAACnB,UAAU,4BAClBE,QAAS,CAAEC,QAAS,EAAGC,GAAI,KAC3BC,YAAa,CAAEF,QAAS,EAAGC,EAAG,GAC9BE,KAAM,CAAEH,QAAS,EAAGC,GAAI,KACxBO,WAAY,CAAEC,SAAU,KAExBL,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,+BAA8B,mBAC3CO,EAAAA,cAAAA,KAAAA,CAAIP,UAAU,6BAA4B,YAC1CO,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,2CAA0C,+OAGvDO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,mDAzBb,CACd,CAAEoB,KAAM,SACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WAwBmBC,KAAI,CAACL,EAAMM,IAClBf,EAAAA,cAACQ,EAAK,CACFC,KAAMA,EAAKI,KACXG,IAAKP,EAAKI,KACVlB,QAAS,CAAEC,QAAS,EAAGqB,MAAO,GAC9BnB,YAAa,CAAEF,QAAS,EAAGqB,MAAO,GAClClB,KAAM,CAAEH,QAAS,EAAGqB,MAAO,GAC3Bb,WAAY,CAAEC,SAAU,GAAKE,MAAW,GAAJQ,QAOhDf,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,oEACXO,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,oCACLnB,EAAAA,cAACoB,EAAAA,EAAM,CAAC3B,UAAU,uBAAsB,aAAU,gBAAC4B,EAAAA,IAAkB,QAEzErB,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,uDACXO,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,mCAAmCG,OAAO,UAC/CtB,EAAAA,cAACuB,EAAAA,IAAU,OAEfvB,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,4BAA4BG,OAAO,UACxCtB,EAAAA,cAACwB,EAAAA,IAAU,OAEfxB,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,iCAAiCG,OAAO,UAC7CtB,EAAAA,cAACyB,EAAAA,IAAQ,OAEbzB,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,mCAAmCG,OAAO,UAC/CtB,EAAAA,cAAC0B,EAAAA,IAAU,UAO3B1B,EAAAA,cAACE,EAAAA,EAAOU,IAAG,CAACnB,UAAU,2BAClBE,QAAS,CAAEC,QAAS,EAAG+B,EAAG,IAAKV,MAAO,IACtCnB,YAAa,CAAEF,QAAS,EAAG+B,EAAG,EAAGV,MAAO,GACxClB,KAAM,CAAEH,QAAS,EAAG+B,EAAG,IAAKV,MAAO,IACnCb,WAAY,CAAEC,SAAU,KAExBL,EAAAA,cAAC4B,EAAAA,EAAW,CAACnC,UAAU,gGACnBoC,IAAI,kBACJC,IAAI,kBACJC,MAAO,IACPC,OAAQ,IACRC,QAAQ,OAAMC,QAAAA,sX,cC9E/B,MAAMC,EAAc,KAEvB,MAAMzC,EAAY,CACdC,QAAS,CAAEC,QAAS,EAAG+B,EAAG,IAC1B7B,YAAa,CAAEF,QAAS,EAAG+B,EAAG,GAC9B5B,KAAM,CAAEH,QAAS,EAAG+B,EAAG,KAG3B,OACI3B,EAAAA,cAACE,EAAAA,EAAOU,IAAG,CAACnB,UAAU,4CAClBE,QAAS,CAAEC,QAAS,EAAG+B,EAAG,KAC1B7B,YAAa,CAAEF,QAAS,EAAG+B,EAAG,GAC9B5B,KAAM,CAAEH,QAAS,EAAG+B,EAAG,KACvBvB,WAAY,CAAEC,SAAU,KAExBL,EAAAA,cAAC4B,EAAAA,EAAW,CAACC,IAAI,0UACbC,IAAI,oBACJC,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRxC,UAAU,mFAAkF2C,YAAAA,EAAAA,QAEhGpC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACE,EAAAA,EAAOI,GAAE,eAACb,UAAU,4DACbC,EAAS,CACbU,WAAY,CAAEC,SAAU,MAExBL,EAAAA,cAAAA,MAAAA,CACI6B,IAAI,wBACJC,IAAI,OACJC,MAAO,GACPC,OAAQ,KACV,iBAGNhC,EAAAA,cAACE,EAAAA,EAAOmC,EAAC,eAAC5C,UAAU,sBACZC,EAAS,CACbU,WAAY,CAAEC,SAAU,GAAKE,MAAO,MACvC,8BAGDP,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,wDACXO,EAAAA,cAACQ,EAAK,CAACC,KAAK,WACZT,EAAAA,cAACQ,EAAK,CAACC,KAAK,WACZT,EAAAA,cAACQ,EAAK,CAACC,KAAK,cAEhBT,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,cAAc1B,UAAU,0FAAyF,cAEtH,gBAAC6C,EAAAA,IAAkB,QAGlB,E,uBClDd,MAAMC,EAAoBjD,IAA4C,IAA3C,UAAEG,GAAmC,EACrE,OACEO,EAAAA,cAAAA,MAAAA,CAAKP,WAAWQ,EAAAA,EAAAA,IAAG,yCAA0CR,IAAc,ECGlE+C,EAAsB,IAE3BxC,EAAAA,cAAAA,UAAAA,CAASP,UAAU,mBAEfO,EAAAA,cAAAA,MAAAA,KAEIA,EAAAA,cAACX,EAAAA,EAAY,CAACE,MAAM,uBAAuBC,QAAQ,YAAYC,UAAU,KACzEO,EAAAA,cAACuC,EAAiB,CAAC9C,UAAU,UAC7BO,EAAAA,cAACmC,EAAW,MACZnC,EAAAA,cAACuC,EAAiB,CAAC9C,UAAU,UAC7BO,EAAAA,cAACmC,EAAW,MACZnC,EAAAA,cAACuC,EAAiB,CAAC9C,UAAU,UAC7BO,EAAAA,cAACmC,EAAW,MACZnC,EAAAA,cAACuC,EAAiB,CAAC9C,UAAU,UAC7BO,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,6BACTO,EAAAA,cAAAA,OAAAA,CAAMP,UAAU,iBAAgB,kBAChCO,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,YAAY1B,UAAU,0FAAyF,YAEpH,gBAAC6C,EAAAA,IAAkB,UCjBpC,MAAMG,EAAoCnD,IAAe,IAAd,KAAEmB,GAAM,EAEtD,MAAMiC,ECXH,SACLC,EACAC,QAAI,IAAJA,IAAAA,EAAOC,UAAUC,UAGjB,MAAMC,EAAyB,iBAATJ,EAAoBA,EAAOA,EAAKK,UAGhDC,EAAeC,KAAKC,OAAOJ,EAASK,KAAKC,OAAS,KAGlDC,EAAU,CACd,GACA,KACA,MACA,OACA,OACA,QACAC,KAeIC,EAAYF,EAAQG,WACvBC,GAAWA,EAASR,KAAKS,IAAIV,KAK1BW,EAAUJ,EAAYF,EAAQE,EAAY,GAAK,EAIrD,OADY,IAAIK,KAAKC,mBAAmBlB,EAAM,CAAEmB,QAAS,SAC9CC,OAAOd,KAAKe,MAAMhB,EAAeW,GArBC,CAC3C,SACA,SACA,OACA,MACA,OACA,QACA,QAc0DJ,GAC9D,CDjCyBU,CACjB,IAAId,KAAK3C,EAAK0D,WACd,SACAC,QAAQ,MAAO,IAEnB,OACIpE,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,8HACXO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,qCACXO,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,eAAegB,EAAKI,MACjCb,EAAAA,cAACqE,EAAAA,IAAM,OAEXrE,EAAAA,cAAAA,OAAAA,KAAO0C,EAAa,mBAClB,EEpBD4B,EAAY,IAcjBtE,EAAAA,cAAAA,UAAAA,CAASP,UAAU,mBACfO,EAAAA,cAACX,EAAAA,EAAY,CAACE,MAAM,gBAAgBC,QAAQ,eAAeC,UAAU,KACrEO,EAAAA,cAACuC,EAAiB,CAAC9C,UAAU,UAC7BO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,uEAfL,CACd,CAAEoB,KAAM,QAASsD,UAAW,cAC5B,CAAEtD,KAAM,UAAYsD,UAAW,cAC/B,CAAEtD,KAAM,SAAWsD,UAAW,cAC9B,CAAEtD,KAAM,WAAasD,UAAW,cAChC,CAAEtD,KAAM,aAAesD,UAAW,cAClC,CAAEtD,KAAM,MAAQsD,UAAW,cAC3B,CAAEtD,KAAM,SAAWsD,UAAW,eASfrD,KAAI,CAACL,EAAM8D,IAClBvE,EAAAA,cAACE,EAAAA,EAAOU,IAAG,CACXI,IAAMuD,EACN5E,QAAS,CAACC,QAAQ,EAAGC,GAAI,KACzBC,YAAa,CAACF,QAAQ,EAAGC,EAAE,GAC3BE,KAAM,CAACH,QAAQ,EAAGC,GAAI,KACtBO,WAAY,CAACC,SAAS,IAAME,MAAe,GAARgE,IAEnCvE,EAAAA,cAACyC,EAAQ,CAAEhC,KAAMA,SClC3B+D,EAAuB,CAC3BC,iBAAkB,CAChBC,IAAK,qBACLC,MAAO,+BAGTC,SAAU,CACRF,IAAK,WACLC,MAAO,qBAGTE,YAAa,gBAEbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,+BAGTI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAGTK,YAAa,CACXN,IAAK,eACLC,MAAO,yBAGTM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAGTO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAGTQ,YAAa,CACXT,IAAK,eACLC,MAAO,yBAGTS,OAAQ,CACNV,IAAK,SACLC,MAAO,mBAGTU,aAAc,CACZX,IAAK,gBACLC,MAAO,0BAGTW,QAAS,CACPZ,IAAK,UACLC,MAAO,oBAGTY,YAAa,CACXb,IAAK,eACLC,MAAO,yBAGTa,OAAQ,CACNd,IAAK,SACLC,MAAO,mBAGTc,WAAY,CACVf,IAAK,cACLC,MAAO,wBAGTe,aAAc,CACZhB,IAAK,gBACLC,MAAO,2BC3EJ,SAASgB,EAAkBC,GAChC,MAAO,CAACC,EAAU,CAAC,KAEjB,MAAM9D,EAAQ8D,EAAQ9D,MAAQ+D,OAAOD,EAAQ9D,OAAS6D,EAAKG,aAE3D,OADeH,EAAKI,QAAQjE,IAAU6D,EAAKI,QAAQJ,EAAKG,aAC3C,CAEjB,CCLA,MAqBaE,EAAa,CACxBtD,KAAMgD,EAAkB,CACtBK,QAvBgB,CAClBE,KAAM,mBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,cAoBLN,aAAc,SAGhBO,KAAMX,EAAkB,CACtBK,QArBgB,CAClBE,KAAM,iBACNC,KAAM,cACNC,OAAQ,YACRC,MAAO,UAkBLN,aAAc,SAGhBQ,SAAUZ,EAAkB,CAC1BK,QAnBoB,CACtBE,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAgBLN,aAAc,UCpCZS,EAAuB,CAC3BC,SAAU,qBACVC,UAAW,mBACXC,MAAO,eACPC,SAAU,kBACVC,SAAU,cACVlC,MAAO,KCmCF,SAASmC,EAAgBlB,GAC9B,MAAO,CAACmB,EAAOlB,KAGb,IAAImB,EACJ,GAAgB,gBAHAnB,GAASoB,QAAUnB,OAAOD,EAAQoB,SAAW,eAG7BrB,EAAKsB,iBAAkB,CACrD,MAAMnB,EAAeH,EAAKuB,wBAA0BvB,EAAKG,aACnDhE,EAAQ8D,GAAS9D,MAAQ+D,OAAOD,EAAQ9D,OAASgE,EAEvDiB,EACEpB,EAAKsB,iBAAiBnF,IAAU6D,EAAKsB,iBAAiBnB,EAC1D,KAAO,CACL,MAAMA,EAAeH,EAAKG,aACpBhE,EAAQ8D,GAAS9D,MAAQ+D,OAAOD,EAAQ9D,OAAS6D,EAAKG,aAE5DiB,EAAcpB,EAAKwB,OAAOrF,IAAU6D,EAAKwB,OAAOrB,EAClD,CAIA,OAAOiB,EAHOpB,EAAKyB,iBAAmBzB,EAAKyB,iBAAiBN,GAASA,EAG5C,CAE7B,CC/DO,SAASO,EAAa1B,GAC3B,MAAO,CAAC2B,EAAQ1B,EAAU,CAAC,KACzB,MAAM9D,EAAQ8D,EAAQ9D,MAEhByF,EACHzF,GAAS6D,EAAK6B,cAAc1F,IAC7B6D,EAAK6B,cAAc7B,EAAK8B,mBACpBC,EAAcJ,EAAOK,MAAMJ,GAEjC,IAAKG,EACH,OAAO,KAET,MAAME,EAAgBF,EAAY,GAE5BG,EACH/F,GAAS6D,EAAKkC,cAAc/F,IAC7B6D,EAAKkC,cAAclC,EAAKmC,mBAEpB/G,EAAMgH,MAAMC,QAAQH,GA+B9B,SAAmBI,EAAOC,GACxB,IAAK,IAAInH,EAAM,EAAGA,EAAMkH,EAAME,OAAQpH,IACpC,GAAImH,EAAUD,EAAMlH,IAClB,OAAOA,EAGX,MACF,CArCQyC,CAAUqE,GAAgBO,GAAYA,EAAQC,KAAKT,KAkB3D,SAAiBU,EAAQJ,GACvB,IAAK,MAAMnH,KAAOuH,EAChB,GACEC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQvH,IAC7CmH,EAAUI,EAAOvH,IAEjB,OAAOA,EAGX,MACF,CA1BQ4H,CAAQd,GAAgBO,GAAYA,EAAQC,KAAKT,KAErD,IAAId,EAEJA,EAAQnB,EAAKiD,cAAgBjD,EAAKiD,cAAc7H,GAAOA,EACvD+F,EAAQlB,EAAQgD,cAEZhD,EAAQgD,cAAc9B,GACtBA,EAIJ,MAAO,CAAEA,QAAOrG,KAFH6G,EAAOuB,MAAMjB,EAAcO,QAElB,CAE1B,CCnCO,SAASW,EAAoBnD,GAClC,MAAO,CAAC2B,EAAQ1B,EAAU,CAAC,KACzB,MAAM8B,EAAcJ,EAAOK,MAAMhC,EAAK4B,cACtC,IAAKG,EAAa,OAAO,KACzB,MAAME,EAAgBF,EAAY,GAE5BqB,EAAczB,EAAOK,MAAMhC,EAAKqD,cACtC,IAAKD,EAAa,OAAO,KACzB,IAAIjC,EAAQnB,EAAKiD,cACbjD,EAAKiD,cAAcG,EAAY,IAC/BA,EAAY,GAGhBjC,EAAQlB,EAAQgD,cAAgBhD,EAAQgD,cAAc9B,GAASA,EAI/D,MAAO,CAAEA,QAAOrG,KAFH6G,EAAOuB,MAAMjB,EAAcO,QAElB,CAE1B,CChBA,MCWac,EAAO,CAClBC,KAAM,QACNC,eR+D4B,CAACC,EAAOC,EAAOzD,KAC3C,IAAI0D,EAEJ,MAAMC,EAAahF,EAAqB6E,GASxC,OAPEE,EADwB,iBAAfC,EACAA,EACU,IAAVF,EACAE,EAAW9E,IAEX8E,EAAW7E,MAAMP,QAAQ,YAAakF,EAAMG,YAGnD5D,GAAS6D,UACP7D,EAAQ8D,YAAc9D,EAAQ8D,WAAa,EACtC,MAAQJ,EAERA,EAAS,OAIbA,CAAM,EQlFbtD,WAAYA,EACZ2D,eLT4B,CAACP,EAAOQ,EAAOC,EAAWC,IACtDvD,EAAqB6C,GKSrBW,SCyIsB,CACtBC,cAzBoB,CAACC,EAAaH,KAClC,MAAMI,EAASC,OAAOF,GAShBG,EAASF,EAAS,IACxB,GAAIE,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOF,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAGtB,OAAOA,EAAS,IAAI,EAMpBG,IAAKxD,EAAgB,CACnBM,OA9Jc,CAChBmD,OAAQ,CAAC,IAAK,KACdC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBA4JtB1E,aAAc,SAGhB2E,QAAS5D,EAAgB,CACvBM,OA7JkB,CACpBmD,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBA2JlD1E,aAAc,OACdsB,iBAAmBqD,GAAYA,EAAU,IAG3CC,MAAO7D,EAAgB,CACrBM,OAzJgB,CAClBmD,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFC,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aA6HA1E,aAAc,SAGhB6E,IAAK9D,EAAgB,CACnBM,OA7Hc,CAChBmD,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvClE,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5CmE,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,aAmHA1E,aAAc,SAGhB8E,UAAW/D,EAAgB,CACzBM,OAnHoB,CACtBmD,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAuFPtF,aAAc,OACdmB,iBApF8B,CAChCqD,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aAwDPlE,uBAAwB,UDpK1BS,MDqEmB,CACnBqC,cAAelB,EAAoB,CACjCvB,aAxF8B,wBAyF9ByB,aAxF8B,OAyF9BJ,cAAgB9B,GAAUuE,SAASvE,EAAO,MAG5CuD,IAAKhD,EAAa,CAChBG,cA3FqB,CACvB8C,OAAQ,UACRC,YAAa,6DACbC,KAAM,8DAyFJ/C,kBAAmB,OACnBI,cAxFqB,CACvByD,IAAK,CAAC,MAAO,YAwFXxD,kBAAmB,QAGrB2C,QAASpD,EAAa,CACpBG,cAzFyB,CAC3B8C,OAAQ,WACRC,YAAa,YACbC,KAAM,kCAuFJ/C,kBAAmB,OACnBI,cAtFyB,CAC3ByD,IAAK,CAAC,KAAM,KAAM,KAAM,OAsFtBxD,kBAAmB,MACnBc,cAAgBtE,GAAUA,EAAQ,IAGpCoG,MAAOrD,EAAa,CAClBG,cAxFuB,CACzB8C,OAAQ,eACRC,YAAa,sDACbC,KAAM,6FAsFJ/C,kBAAmB,OACnBI,cArFuB,CACzByC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFgB,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,QA0DAxD,kBAAmB,QAGrB6C,IAAKtD,EAAa,CAChBG,cA1DqB,CACvB8C,OAAQ,YACRlE,MAAO,2BACPmE,YAAa,kCACbC,KAAM,gEAuDJ/C,kBAAmB,OACnBI,cAtDqB,CACvByC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDgB,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAqDjDxD,kBAAmB,QAGrB8C,UAAWvD,EAAa,CACtBG,cAtD2B,CAC7B8C,OAAQ,6DACRgB,IAAK,kFAqDH7D,kBAAmB,MACnBI,cApD2B,CAC7ByD,IAAK,CACHT,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA4CPtD,kBAAmB,SC5GrBlC,QAAS,CACP2F,aAAc,EACdC,sBAAuB,IEvB3B,IAAIC,EAAiB,CAAC,EAEf,SAASC,IACd,OAAOD,CACT,CCiDuBxI,KAAK0I,IAAI,GAAI,GA/B7B,MAsDMC,EAAqB,OAOrBC,EAAoB,MCnD1B,SAASC,EAAOC,GACrB,MAAMC,EAASzD,OAAOC,UAAUgB,SAASd,KAAKqD,GAG9C,OACEA,aAAoB5I,MACC,iBAAb4I,GAAoC,kBAAXC,EAG1B,IAAID,EAASE,aAAaF,GAEb,iBAAbA,GACI,oBAAXC,GACoB,iBAAbD,GACI,oBAAXC,EAGO,IAAI7I,KAAK4I,GAGT,IAAI5I,KAAK+I,IAEpB,CChCO,SAASC,EAAWzJ,GACzB,MAAMkH,EAAQkC,EAAOpJ,GAErB,OADAkH,EAAMwC,SAAS,EAAG,EAAG,EAAG,GACjBxC,CACT,CCbO,SAASyC,EAAgC3J,GAC9C,MAAMkH,EAAQkC,EAAOpJ,GACf4J,EAAU,IAAInJ,KAClBA,KAAKoJ,IACH3C,EAAM4C,cACN5C,EAAM6C,WACN7C,EAAM8C,UACN9C,EAAM+C,WACN/C,EAAMgD,aACNhD,EAAMiD,aACNjD,EAAMkD,oBAIV,OADAR,EAAQS,eAAenD,EAAM4C,gBACrB9J,GAAQ4J,CAClB,CCQO,SAASU,EAAyBC,EAAUC,GACjD,MAAMC,EAAiBhB,EAAWc,GAC5BG,EAAkBjB,EAAWe,GAE7BG,GACHF,EAAiBd,EAAgCc,GAC9CG,GACHF,EAAkBf,EAAgCe,GAKrD,OAAOnK,KAAKC,OAAOmK,EAAgBC,GAAkBzB,EACvD,CCnBO,SAAS0B,EAAc7K,EAAMoE,GAClC,OAAIpE,aAAgBS,KACX,IAAIT,EAAKuJ,YAAYnF,GAErB,IAAI3D,KAAK2D,EAEpB,CCbO,SAAS0G,EAAY9K,GAC1B,MAAM+K,EAAY3B,EAAOpJ,GACnBkH,EAAQ2D,EAAc7K,EAAM,GAGlC,OAFAkH,EAAM8D,YAAYD,EAAUjB,cAAe,EAAG,GAC9C5C,EAAMwC,SAAS,EAAG,EAAG,EAAG,GACjBxC,CACT,CCNO,SAAS+D,EAAajL,GAC3B,MAAMkH,EAAQkC,EAAOpJ,GAGrB,OAFasK,EAAyBpD,EAAO4D,EAAY5D,IAChC,CAE3B,CCKO,SAASgE,EAAYlL,EAAMkD,GAChC,MAAM6F,EAAiBC,IACjBH,EACJ3F,GAAS2F,cACT3F,GAASiI,QAAQjI,SAAS2F,cAC1BE,EAAeF,cACfE,EAAeoC,QAAQjI,SAAS2F,cAChC,EAEI3B,EAAQkC,EAAOpJ,GACfiI,EAAMf,EAAMkE,SACZC,GAAQpD,EAAMY,EAAe,EAAI,GAAKZ,EAAMY,EAIlD,OAFA3B,EAAMoE,QAAQpE,EAAM8C,UAAYqB,GAChCnE,EAAMwC,SAAS,EAAG,EAAG,EAAG,GACjBxC,CACT,CCzBO,SAASqE,EAAevL,GAC7B,OAAOkL,EAAYlL,EAAM,CAAE6I,aAAc,GAC3C,CCAO,SAAS2C,EAAexL,GAC7B,MAAMkH,EAAQkC,EAAOpJ,GACfyL,EAAOvE,EAAM4C,cAEb4B,EAA4Bb,EAAc7K,EAAM,GACtD0L,EAA0BV,YAAYS,EAAO,EAAG,EAAG,GACnDC,EAA0BhC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMiC,EAAkBJ,EAAeG,GAEjCE,EAA4Bf,EAAc7K,EAAM,GACtD4L,EAA0BZ,YAAYS,EAAM,EAAG,GAC/CG,EAA0BlC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMmC,EAAkBN,EAAeK,GAEvC,OAAI1E,EAAM7G,WAAasL,EAAgBtL,UAC9BoL,EAAO,EACLvE,EAAM7G,WAAawL,EAAgBxL,UACrCoL,EAEAA,EAAO,CAElB,CCpBO,SAASK,EAAmB9L,GACjC,MAAMyL,EAAOD,EAAexL,GACtB+L,EAAkBlB,EAAc7K,EAAM,GAG5C,OAFA+L,EAAgBf,YAAYS,EAAM,EAAG,GACrCM,EAAgBrC,SAAS,EAAG,EAAG,EAAG,GAC3B6B,EAAeQ,EACxB,CCPO,SAASC,EAAWhM,GACzB,MAAMkH,EAAQkC,EAAOpJ,GACfqL,GAAQE,EAAerE,IAAU4E,EAAmB5E,GAK1D,OAAO3G,KAAKC,MAAM6K,EAAOnC,GAAsB,CACjD,CCWO,SAAS+C,EAAYjM,EAAMkD,GAChC,MAAMgE,EAAQkC,EAAOpJ,GACfyL,EAAOvE,EAAM4C,cAEbf,EAAiBC,IACjBF,EACJ5F,GAAS4F,uBACT5F,GAASiI,QAAQjI,SAAS4F,uBAC1BC,EAAeD,uBACfC,EAAeoC,QAAQjI,SAAS4F,uBAChC,EAEIoD,EAAsBrB,EAAc7K,EAAM,GAChDkM,EAAoBlB,YAAYS,EAAO,EAAG,EAAG3C,GAC7CoD,EAAoBxC,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMiC,EAAkBT,EAAYgB,EAAqBhJ,GAEnDiJ,EAAsBtB,EAAc7K,EAAM,GAChDmM,EAAoBnB,YAAYS,EAAM,EAAG3C,GACzCqD,EAAoBzC,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMmC,EAAkBX,EAAYiB,EAAqBjJ,GAEzD,OAAIgE,EAAM7G,WAAasL,EAAgBtL,UAC9BoL,EAAO,EACLvE,EAAM7G,WAAawL,EAAgBxL,UACrCoL,EAEAA,EAAO,CAElB,CC7BO,SAASW,EAAgBpM,EAAMkD,GACpC,MAAM6F,EAAiBC,IACjBF,EACJ5F,GAAS4F,uBACT5F,GAASiI,QAAQjI,SAAS4F,uBAC1BC,EAAeD,uBACfC,EAAeoC,QAAQjI,SAAS4F,uBAChC,EAEI2C,EAAOQ,EAAYjM,EAAMkD,GACzBmJ,EAAYxB,EAAc7K,EAAM,GACtCqM,EAAUrB,YAAYS,EAAM,EAAG3C,GAC/BuD,EAAU3C,SAAS,EAAG,EAAG,EAAG,GAE5B,OADcwB,EAAYmB,EAAWnJ,EAEvC,CCdO,SAASoJ,EAAQtM,EAAMkD,GAC5B,MAAMgE,EAAQkC,EAAOpJ,GACfqL,GAAQH,EAAYhE,EAAOhE,IAAYkJ,EAAgBlF,EAAOhE,GAKpE,OAAO3C,KAAKC,MAAM6K,EAAOnC,GAAsB,CACjD,CCtDO,SAASqD,EAAgB/E,EAAQgF,GAGtC,OAFahF,EAAS,EAAI,IAAM,IACjBjH,KAAKS,IAAIwG,GAAQV,WAAW2F,SAASD,EAAc,IAEpE,CCWO,MAAME,EAAkB,CAE7B1N,EAAEgB,EAAM0G,GAUN,MAAMiG,EAAa3M,EAAK8J,cAElB2B,EAAOkB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAOJ,EAA0B,OAAV7F,EAAiB+E,EAAO,IAAMA,EAAM/E,EAAMjB,OACnE,EAGAmH,EAAE5M,EAAM0G,GACN,MAAMsB,EAAQhI,EAAK+J,WACnB,MAAiB,MAAVrD,EAAgBvD,OAAO6E,EAAQ,GAAKuE,EAAgBvE,EAAQ,EAAG,EACxE,EAGA6E,EAAE7M,EAAM0G,GACN,OAAO6F,EAAgBvM,EAAKgK,UAAWtD,EAAMjB,OAC/C,EAGAqH,EAAE9M,EAAM0G,GACN,MAAMqG,EAAqB/M,EAAKiK,WAAa,IAAM,EAAI,KAAO,KAE9D,OAAQvD,GACN,IAAK,IACL,IAAK,KACH,OAAOqG,EAAmBC,cAC5B,IAAK,MACH,OAAOD,EACT,IAAK,QACH,OAAOA,EAAmB,GAE5B,QACE,MAA8B,OAAvBA,EAA8B,OAAS,OAEpD,EAGAE,EAAEjN,EAAM0G,GACN,OAAO6F,EAAgBvM,EAAKiK,WAAa,IAAM,GAAIvD,EAAMjB,OAC3D,EAGAyH,EAAElN,EAAM0G,GACN,OAAO6F,EAAgBvM,EAAKiK,WAAYvD,EAAMjB,OAChD,EAGA0H,EAAEnN,EAAM0G,GACN,OAAO6F,EAAgBvM,EAAKkK,aAAcxD,EAAMjB,OAClD,EAGA2H,EAAEpN,EAAM0G,GACN,OAAO6F,EAAgBvM,EAAKmK,aAAczD,EAAMjB,OAClD,EAGA4H,EAAErN,EAAM0G,GACN,MAAM4G,EAAiB5G,EAAMjB,OACvB8H,EAAevN,EAAKoK,kBAI1B,OAAOmC,EAHmBhM,KAAKiN,MAC7BD,EAAehN,KAAK0I,IAAI,GAAIqE,EAAiB,IAEL5G,EAAMjB,OAClD,GClFIgI,EAGM,WAHNA,EAIE,OAJFA,EAKK,UALLA,EAMO,YANPA,GAOK,UAPLA,GAQG,QAiDIC,GAAa,CAExBC,EAAG,SAAU3N,EAAM0G,EAAOW,GACxB,MAAMM,EAAM3H,EAAK8J,cAAgB,EAAI,EAAI,EACzC,OAAQpD,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOW,EAASM,IAAIA,EAAK,CAAEvI,MAAO,gBAEpC,IAAK,QACH,OAAOiI,EAASM,IAAIA,EAAK,CAAEvI,MAAO,WAGpC,QACE,OAAOiI,EAASM,IAAIA,EAAK,CAAEvI,MAAO,SAExC,EAGAJ,EAAG,SAAUgB,EAAM0G,EAAOW,GAExB,GAAc,OAAVX,EAAgB,CAClB,MAAMiG,EAAa3M,EAAK8J,cAElB2B,EAAOkB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAOtF,EAASC,cAAcmE,EAAM,CAAEmC,KAAM,QAC9C,CAEA,OAAOlB,EAAgB1N,EAAEgB,EAAM0G,EACjC,EAGAmH,EAAG,SAAU7N,EAAM0G,EAAOW,EAAUnE,GAClC,MAAM4K,EAAiB7B,EAAYjM,EAAMkD,GAEnC6K,EAAWD,EAAiB,EAAIA,EAAiB,EAAIA,EAG3D,GAAc,OAAVpH,EAAgB,CAElB,OAAO6F,EADcwB,EAAW,IACK,EACvC,CAGA,MAAc,OAAVrH,EACKW,EAASC,cAAcyG,EAAU,CAAEH,KAAM,SAI3CrB,EAAgBwB,EAAUrH,EAAMjB,OACzC,EAGAuI,EAAG,SAAUhO,EAAM0G,GAIjB,OAAO6F,EAHaf,EAAexL,GAGC0G,EAAMjB,OAC5C,EAWAwI,EAAG,SAAUjO,EAAM0G,GAEjB,OAAO6F,EADMvM,EAAK8J,cACWpD,EAAMjB,OACrC,EAGAyI,EAAG,SAAUlO,EAAM0G,EAAOW,GACxB,MAAMU,EAAUxH,KAAK4N,MAAMnO,EAAK+J,WAAa,GAAK,GAClD,OAAQrD,GAEN,IAAK,IACH,OAAOvD,OAAO4E,GAEhB,IAAK,KACH,OAAOwE,EAAgBxE,EAAS,GAElC,IAAK,KACH,OAAOV,EAASC,cAAcS,EAAS,CAAE6F,KAAM,YAEjD,IAAK,MACH,OAAOvG,EAASU,QAAQA,EAAS,CAC/B3I,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASU,QAAQA,EAAS,CAC/B3I,MAAO,SACPkF,QAAS,eAIb,QACE,OAAO+C,EAASU,QAAQA,EAAS,CAC/B3I,MAAO,OACPkF,QAAS,eAGjB,EAGA8J,EAAG,SAAUpO,EAAM0G,EAAOW,GACxB,MAAMU,EAAUxH,KAAK4N,MAAMnO,EAAK+J,WAAa,GAAK,GAClD,OAAQrD,GAEN,IAAK,IACH,OAAOvD,OAAO4E,GAEhB,IAAK,KACH,OAAOwE,EAAgBxE,EAAS,GAElC,IAAK,KACH,OAAOV,EAASC,cAAcS,EAAS,CAAE6F,KAAM,YAEjD,IAAK,MACH,OAAOvG,EAASU,QAAQA,EAAS,CAC/B3I,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASU,QAAQA,EAAS,CAC/B3I,MAAO,SACPkF,QAAS,eAIb,QACE,OAAO+C,EAASU,QAAQA,EAAS,CAC/B3I,MAAO,OACPkF,QAAS,eAGjB,EAGAsI,EAAG,SAAU5M,EAAM0G,EAAOW,GACxB,MAAMW,EAAQhI,EAAK+J,WACnB,OAAQrD,GACN,IAAK,IACL,IAAK,KACH,OAAOgG,EAAgBE,EAAE5M,EAAM0G,GAEjC,IAAK,KACH,OAAOW,EAASC,cAAcU,EAAQ,EAAG,CAAE4F,KAAM,UAEnD,IAAK,MACH,OAAOvG,EAASW,MAAMA,EAAO,CAC3B5I,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASW,MAAMA,EAAO,CAC3B5I,MAAO,SACPkF,QAAS,eAIb,QACE,OAAO+C,EAASW,MAAMA,EAAO,CAAE5I,MAAO,OAAQkF,QAAS,eAE7D,EAGA+J,EAAG,SAAUrO,EAAM0G,EAAOW,GACxB,MAAMW,EAAQhI,EAAK+J,WACnB,OAAQrD,GAEN,IAAK,IACH,OAAOvD,OAAO6E,EAAQ,GAExB,IAAK,KACH,OAAOuE,EAAgBvE,EAAQ,EAAG,GAEpC,IAAK,KACH,OAAOX,EAASC,cAAcU,EAAQ,EAAG,CAAE4F,KAAM,UAEnD,IAAK,MACH,OAAOvG,EAASW,MAAMA,EAAO,CAC3B5I,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASW,MAAMA,EAAO,CAC3B5I,MAAO,SACPkF,QAAS,eAIb,QACE,OAAO+C,EAASW,MAAMA,EAAO,CAAE5I,MAAO,OAAQkF,QAAS,eAE7D,EAGAgK,EAAG,SAAUtO,EAAM0G,EAAOW,EAAUnE,GAClC,MAAMqL,EAAOjC,EAAQtM,EAAMkD,GAE3B,MAAc,OAAVwD,EACKW,EAASC,cAAciH,EAAM,CAAEX,KAAM,SAGvCrB,EAAgBgC,EAAM7H,EAAMjB,OACrC,EAGA+I,EAAG,SAAUxO,EAAM0G,EAAOW,GACxB,MAAMoH,EAAUzC,EAAWhM,GAE3B,MAAc,OAAV0G,EACKW,EAASC,cAAcmH,EAAS,CAAEb,KAAM,SAG1CrB,EAAgBkC,EAAS/H,EAAMjB,OACxC,EAGAoH,EAAG,SAAU7M,EAAM0G,EAAOW,GACxB,MAAc,OAAVX,EACKW,EAASC,cAActH,EAAKgK,UAAW,CAAE4D,KAAM,SAGjDlB,EAAgBG,EAAE7M,EAAM0G,EACjC,EAGAgI,EAAG,SAAU1O,EAAM0G,EAAOW,GACxB,MAAMsH,EAAY1D,EAAajL,GAE/B,MAAc,OAAV0G,EACKW,EAASC,cAAcqH,EAAW,CAAEf,KAAM,cAG5CrB,EAAgBoC,EAAWjI,EAAMjB,OAC1C,EAGAmJ,EAAG,SAAU5O,EAAM0G,EAAOW,GACxB,MAAMwH,EAAY7O,EAAKoL,SACvB,OAAQ1E,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOW,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,SACPkF,QAAS,eAGb,IAAK,SACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,QACPkF,QAAS,eAIb,QACE,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,OACPkF,QAAS,eAGjB,EAGAwK,EAAG,SAAU9O,EAAM0G,EAAOW,EAAUnE,GAClC,MAAM2L,EAAY7O,EAAKoL,SACjB2D,GAAkBF,EAAY3L,EAAQ2F,aAAe,GAAK,GAAK,EACrE,OAAQnC,GAEN,IAAK,IACH,OAAOvD,OAAO4L,GAEhB,IAAK,KACH,OAAOxC,EAAgBwC,EAAgB,GAEzC,IAAK,KACH,OAAO1H,EAASC,cAAcyH,EAAgB,CAAEnB,KAAM,QACxD,IAAK,MACH,OAAOvG,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,SACPkF,QAAS,eAGb,IAAK,SACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,QACPkF,QAAS,eAIb,QACE,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,OACPkF,QAAS,eAGjB,EAGA0K,EAAG,SAAUhP,EAAM0G,EAAOW,EAAUnE,GAClC,MAAM2L,EAAY7O,EAAKoL,SACjB2D,GAAkBF,EAAY3L,EAAQ2F,aAAe,GAAK,GAAK,EACrE,OAAQnC,GAEN,IAAK,IACH,OAAOvD,OAAO4L,GAEhB,IAAK,KACH,OAAOxC,EAAgBwC,EAAgBrI,EAAMjB,QAE/C,IAAK,KACH,OAAO4B,EAASC,cAAcyH,EAAgB,CAAEnB,KAAM,QACxD,IAAK,MACH,OAAOvG,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,SACPkF,QAAS,eAGb,IAAK,SACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,QACPkF,QAAS,eAIb,QACE,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,OACPkF,QAAS,eAGjB,EAGAlG,EAAG,SAAU4B,EAAM0G,EAAOW,GACxB,MAAMwH,EAAY7O,EAAKoL,SACjB6D,EAA6B,IAAdJ,EAAkB,EAAIA,EAC3C,OAAQnI,GAEN,IAAK,IACH,OAAOvD,OAAO8L,GAEhB,IAAK,KACH,OAAO1C,EAAgB0C,EAAcvI,EAAMjB,QAE7C,IAAK,KACH,OAAO4B,EAASC,cAAc2H,EAAc,CAAErB,KAAM,QAEtD,IAAK,MACH,OAAOvG,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,cACPkF,QAAS,eAGb,IAAK,QACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,SACPkF,QAAS,eAGb,IAAK,SACH,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,QACPkF,QAAS,eAIb,QACE,OAAO+C,EAASY,IAAI4G,EAAW,CAC7BzP,MAAO,OACPkF,QAAS,eAGjB,EAGAwI,EAAG,SAAU9M,EAAM0G,EAAOW,GACxB,MACM0F,EADQ/M,EAAKiK,WACgB,IAAM,EAAI,KAAO,KAEpD,OAAQvD,GACN,IAAK,IACL,IAAK,KACH,OAAOW,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,cACPkF,QAAS,eAEb,IAAK,MACH,OAAO+C,EACJa,UAAU6E,EAAoB,CAC7B3N,MAAO,cACPkF,QAAS,eAEV4K,cACL,IAAK,QACH,OAAO7H,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,SACPkF,QAAS,eAGb,QACE,OAAO+C,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,OACPkF,QAAS,eAGjB,EAGA6K,EAAG,SAAUnP,EAAM0G,EAAOW,GACxB,MAAM+H,EAAQpP,EAAKiK,WACnB,IAAI8C,EASJ,OAPEA,EADY,KAAVqC,EACmB3B,EACF,IAAV2B,EACY3B,EAEA2B,EAAQ,IAAM,EAAI,KAAO,KAGxC1I,GACN,IAAK,IACL,IAAK,KACH,OAAOW,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,cACPkF,QAAS,eAEb,IAAK,MACH,OAAO+C,EACJa,UAAU6E,EAAoB,CAC7B3N,MAAO,cACPkF,QAAS,eAEV4K,cACL,IAAK,QACH,OAAO7H,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,SACPkF,QAAS,eAGb,QACE,OAAO+C,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,OACPkF,QAAS,eAGjB,EAGA+K,EAAG,SAAUrP,EAAM0G,EAAOW,GACxB,MAAM+H,EAAQpP,EAAKiK,WACnB,IAAI8C,EAWJ,OATEA,EADEqC,GAAS,GACU3B,GACZ2B,GAAS,GACG3B,EACZ2B,GAAS,EACG3B,EAEAA,GAGf/G,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOW,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,cACPkF,QAAS,eAEb,IAAK,QACH,OAAO+C,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,SACPkF,QAAS,eAGb,QACE,OAAO+C,EAASa,UAAU6E,EAAoB,CAC5C3N,MAAO,OACPkF,QAAS,eAGjB,EAGA2I,EAAG,SAAUjN,EAAM0G,EAAOW,GACxB,GAAc,OAAVX,EAAgB,CAClB,IAAI0I,EAAQpP,EAAKiK,WAAa,GAE9B,OADc,IAAVmF,IAAaA,EAAQ,IAClB/H,EAASC,cAAc8H,EAAO,CAAExB,KAAM,QAC/C,CAEA,OAAOlB,EAAgBO,EAAEjN,EAAM0G,EACjC,EAGAwG,EAAG,SAAUlN,EAAM0G,EAAOW,GACxB,MAAc,OAAVX,EACKW,EAASC,cAActH,EAAKiK,WAAY,CAAE2D,KAAM,SAGlDlB,EAAgBQ,EAAElN,EAAM0G,EACjC,EAGA4I,EAAG,SAAUtP,EAAM0G,EAAOW,GACxB,MAAM+H,EAAQpP,EAAKiK,WAAa,GAEhC,MAAc,OAAVvD,EACKW,EAASC,cAAc8H,EAAO,CAAExB,KAAM,SAGxCrB,EAAgB6C,EAAO1I,EAAMjB,OACtC,EAGA8J,EAAG,SAAUvP,EAAM0G,EAAOW,GACxB,IAAI+H,EAAQpP,EAAKiK,WAGjB,OAFc,IAAVmF,IAAaA,EAAQ,IAEX,OAAV1I,EACKW,EAASC,cAAc8H,EAAO,CAAExB,KAAM,SAGxCrB,EAAgB6C,EAAO1I,EAAMjB,OACtC,EAGA0H,EAAG,SAAUnN,EAAM0G,EAAOW,GACxB,MAAc,OAAVX,EACKW,EAASC,cAActH,EAAKkK,aAAc,CAAE0D,KAAM,WAGpDlB,EAAgBS,EAAEnN,EAAM0G,EACjC,EAGA0G,EAAG,SAAUpN,EAAM0G,EAAOW,GACxB,MAAc,OAAVX,EACKW,EAASC,cAActH,EAAKmK,aAAc,CAAEyD,KAAM,WAGpDlB,EAAgBU,EAAEpN,EAAM0G,EACjC,EAGA2G,EAAG,SAAUrN,EAAM0G,GACjB,OAAOgG,EAAgBW,EAAErN,EAAM0G,EACjC,EAGA8I,EAAG,SAAUxP,EAAM0G,EAAO+I,GACxB,MAAMC,EAAiB1P,EAAK2P,oBAE5B,GAAuB,IAAnBD,EACF,MAAO,IAGT,OAAQhJ,GAEN,IAAK,IACH,OAAOkJ,GAAkCF,GAK3C,IAAK,OACL,IAAK,KACH,OAAOG,GAAeH,GAOxB,QACE,OAAOG,GAAeH,EAAgB,KAE5C,EAGAxS,EAAG,SAAU8C,EAAM0G,EAAO+I,GACxB,MAAMC,EAAiB1P,EAAK2P,oBAE5B,OAAQjJ,GAEN,IAAK,IACH,OAAOkJ,GAAkCF,GAK3C,IAAK,OACL,IAAK,KACH,OAAOG,GAAeH,GAOxB,QACE,OAAOG,GAAeH,EAAgB,KAE5C,EAGAI,EAAG,SAAU9P,EAAM0G,EAAO+I,GACxB,MAAMC,EAAiB1P,EAAK2P,oBAE5B,OAAQjJ,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQqJ,GAAoBL,EAAgB,KAGrD,QACE,MAAO,MAAQG,GAAeH,EAAgB,KAEpD,EAGAM,EAAG,SAAUhQ,EAAM0G,EAAO+I,GACxB,MAAMC,EAAiB1P,EAAK2P,oBAE5B,OAAQjJ,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQqJ,GAAoBL,EAAgB,KAGrD,QACE,MAAO,MAAQG,GAAeH,EAAgB,KAEpD,EAGAO,EAAG,SAAUjQ,EAAM0G,EAAO+I,GAExB,OAAOlD,EADWhM,KAAKiN,MAAMxN,EAAKK,UAAY,KACZqG,EAAMjB,OAC1C,EAGAyK,EAAG,SAAUlQ,EAAM0G,EAAO+I,GAExB,OAAOlD,EADWvM,EAAKK,UACWqG,EAAMjB,OAC1C,GAGF,SAASsK,GAAoBI,EAAQC,EAAY,IAC/C,MAAMC,EAAOF,EAAS,EAAI,IAAM,IAC1BG,EAAY/P,KAAKS,IAAImP,GACrBf,EAAQ7O,KAAKiN,MAAM8C,EAAY,IAC/BC,EAAUD,EAAY,GAC5B,OAAgB,IAAZC,EACKF,EAAOlN,OAAOiM,GAEhBiB,EAAOlN,OAAOiM,GAASgB,EAAY7D,EAAgBgE,EAAS,EACrE,CAEA,SAASX,GAAkCO,EAAQC,GACjD,GAAID,EAAS,IAAO,EAAG,CAErB,OADaA,EAAS,EAAI,IAAM,KAClB5D,EAAgBhM,KAAKS,IAAImP,GAAU,GAAI,EACvD,CACA,OAAON,GAAeM,EAAQC,EAChC,CAEA,SAASP,GAAeM,EAAQC,EAAY,IAC1C,MAAMC,EAAOF,EAAS,EAAI,IAAM,IAC1BG,EAAY/P,KAAKS,IAAImP,GAG3B,OAAOE,EAFO9D,EAAgBhM,KAAKiN,MAAM8C,EAAY,IAAK,GAEpCF,EADN7D,EAAgB+D,EAAY,GAAI,EAElD,CCvwBA,MAAME,GAAoB,CAAC9K,EAASpC,KAClC,OAAQoC,GACN,IAAK,IACH,OAAOpC,EAAWtD,KAAK,CAAEZ,MAAO,UAClC,IAAK,KACH,OAAOkE,EAAWtD,KAAK,CAAEZ,MAAO,WAClC,IAAK,MACH,OAAOkE,EAAWtD,KAAK,CAAEZ,MAAO,SAElC,QACE,OAAOkE,EAAWtD,KAAK,CAAEZ,MAAO,SACpC,EAGIqR,GAAoB,CAAC/K,EAASpC,KAClC,OAAQoC,GACN,IAAK,IACH,OAAOpC,EAAWK,KAAK,CAAEvE,MAAO,UAClC,IAAK,KACH,OAAOkE,EAAWK,KAAK,CAAEvE,MAAO,WAClC,IAAK,MACH,OAAOkE,EAAWK,KAAK,CAAEvE,MAAO,SAElC,QACE,OAAOkE,EAAWK,KAAK,CAAEvE,MAAO,SACpC,EAmCWsR,GAAiB,CAC5BhR,EAAG+Q,GACHE,EAlC4B,CAACjL,EAASpC,KACtC,MAAM0B,EAAcU,EAAQT,MAAM,cAAgB,GAC5C2L,EAAc5L,EAAY,GAC1B6L,EAAc7L,EAAY,GAEhC,IAAK6L,EACH,OAAOL,GAAkB9K,EAASpC,GAGpC,IAAIwN,EAEJ,OAAQF,GACN,IAAK,IACHE,EAAiBxN,EAAWM,SAAS,CAAExE,MAAO,UAC9C,MACF,IAAK,KACH0R,EAAiBxN,EAAWM,SAAS,CAAExE,MAAO,WAC9C,MACF,IAAK,MACH0R,EAAiBxN,EAAWM,SAAS,CAAExE,MAAO,SAC9C,MAEF,QACE0R,EAAiBxN,EAAWM,SAAS,CAAExE,MAAO,SAIlD,OAAO0R,EACJrP,QAAQ,WAAY+O,GAAkBI,EAAatN,IACnD7B,QAAQ,WAAYgP,GAAkBI,EAAavN,GAAY,GCzD9DyN,GAAmB,OACnBC,GAAkB,OAElBC,GAAc,CAAC,IAAK,KAAM,KAAM,QC6B/B,SAASC,GAAO9M,GACrB,OACEA,aAAiB3D,MACC,iBAAV2D,GACoC,kBAA1CyB,OAAOC,UAAUgB,SAASd,KAAK5B,EAErC,CCFO,SAAS+M,GAAQnR,GACtB,IAAKkR,GAAOlR,IAAyB,iBAATA,EAC1B,OAAO,EAET,MAAMkH,EAAQkC,EAAOpJ,GACrB,OAAQoR,MAAM3J,OAAOP,GACvB,CCfA,MAAMmK,GACJ,wDAIIC,GAA6B,oCAE7BC,GAAsB,eACtBC,GAAoB,MACpBC,GAAgC,WAsS/B,SAASpQ,GAAOrB,EAAM0R,EAAWxO,GACtC,MAAM6F,EAAiBC,IACjBmC,EAASjI,GAASiI,QAAUpC,EAAeoC,QAAU,EAErDrC,EACJ5F,GAAS4F,uBACT5F,GAASiI,QAAQjI,SAAS4F,uBAC1BC,EAAeD,uBACfC,EAAeoC,QAAQjI,SAAS4F,uBAChC,EAEID,EACJ3F,GAAS2F,cACT3F,GAASiI,QAAQjI,SAAS2F,cAC1BE,EAAeF,cACfE,EAAeoC,QAAQjI,SAAS2F,cAChC,EAEI8I,EAAevI,EAAOpJ,GAE5B,IAAKmR,GAAQQ,GACX,MAAM,IAAIC,WAAW,sBAGvB,IAAIC,EAAQH,EACTzM,MAAMqM,IACNnT,KAAK2T,IACJ,MAAMC,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,GAA6C,MAAnBA,EAAwB,CAEpD,OAAOC,EADetB,GAAeqB,IAChBD,EAAW3G,EAAO7H,WACzC,CACA,OAAOwO,CAAS,IAEjBG,KAAK,IACLhN,MAAMoM,IACNlT,KAAK2T,IAEJ,GAAkB,OAAdA,EACF,MAAO,CAAEI,SAAS,EAAO9N,MAAO,KAGlC,MAAM2N,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,EACF,MAAO,CAAEG,SAAS,EAAO9N,MAAO+N,GAAmBL,IAGrD,GAAIpE,GAAWqE,GACb,MAAO,CAAEG,SAAS,EAAM9N,MAAO0N,GAGjC,GAAIC,EAAe9M,MAAMwM,IACvB,MAAM,IAAIG,WACR,iEACEG,EACA,KAIN,MAAO,CAAEG,SAAS,EAAO9N,MAAO0N,EAAW,IAI3C3G,EAAO9D,SAAS+K,eAClBP,EAAQ1G,EAAO9D,SAAS+K,aAAaT,EAAcE,IAGrD,MAAMQ,EAAmB,CACvBvJ,wBACAD,eACAsC,UAGF,OAAO0G,EACJ1T,KAAKmU,IACJ,IAAKA,EAAKJ,QAAS,OAAOI,EAAKlO,MAE/B,MAAMsC,EAAQ4L,EAAKlO,QAGflB,GAASqP,6BHjZZ,SAAkC7L,GACvC,OAAOsK,GAAgBrL,KAAKe,EAC9B,CGgZU8L,CAAyB9L,KACzBxD,GAASuP,8BHvZZ,SAAmC/L,GACxC,OAAOqK,GAAiBpL,KAAKe,EAC/B,CGsZUgM,CAA0BhM,KHhZ7B,SAAmCA,EAAOrF,EAAQsR,GACvD,MAAMC,EAKR,SAAiBlM,EAAOrF,EAAQsR,GAC9B,MAAME,EAAuB,MAAbnM,EAAM,GAAa,QAAU,oBAC7C,MAAO,SAASA,EAAMwI,gCAAgCxI,aAAiBrF,uBAA4BwR,oBAA0BF,kFAC/H,CARmBG,CAAQpM,EAAOrF,EAAQsR,GAExC,GADAI,QAAQC,KAAKJ,GACT3B,GAAYgC,SAASvM,GAAQ,MAAM,IAAIkL,WAAWgB,EACxD,CG8YQM,CAA0BxM,EAAOgL,EAAWvO,OAAOnD,IAIrD,OAAOmT,EADWzF,GAAWhH,EAAM,KAClBiL,EAAcjL,EAAOyE,EAAO9D,SAAUgL,EAAiB,IAEzEJ,KAAK,GACV,CAEA,SAASE,GAAmBQ,GAC1B,MAAMS,EAAUT,EAAM1N,MAAMsM,IAE5B,OAAK6B,EAIEA,EAAQ,GAAG3R,QAAQ+P,GAAmB,KAHpCmB,CAIX,CC5YO,SAASU,GAAW9I,EAAUC,GACnC,MAAM8I,EAAYlK,EAAOmB,GACnBgJ,EAAanK,EAAOoB,GAEpBa,EAAOiI,EAAUjT,UAAYkT,EAAWlT,UAE9C,OAAIgL,EAAO,GACD,EACCA,EAAO,EACT,EAGAA,CAEX,CCzBO,SAASmI,GAA2BjJ,EAAUC,GACnD,MAAM8I,EAAYlK,EAAOmB,GACnBgJ,EAAanK,EAAOoB,GAK1B,OAAkB,IAHD8I,EAAUxJ,cAAgByJ,EAAWzJ,gBACpCwJ,EAAUvJ,WAAawJ,EAAWxJ,WAGtD,CCXO,SAAS0J,GAASzT,GACvB,MAAMkH,EAAQkC,EAAOpJ,GAErB,OADAkH,EAAMwC,SAAS,GAAI,GAAI,GAAI,KACpBxC,CACT,CCJO,SAASwM,GAAW1T,GACzB,MAAMkH,EAAQkC,EAAOpJ,GACfgI,EAAQd,EAAM6C,WAGpB,OAFA7C,EAAM8D,YAAY9D,EAAM4C,cAAe9B,EAAQ,EAAG,GAClDd,EAAMwC,SAAS,GAAI,GAAI,GAAI,KACpBxC,CACT,CCLO,SAASyM,GAAiB3T,GAC/B,MAAMkH,EAAQkC,EAAOpJ,GACrB,OAAQyT,GAASvM,KAAYwM,GAAWxM,EAC1C,CCDO,SAAS0M,GAAmBrJ,EAAUC,GAC3C,MAAM8I,EAAYlK,EAAOmB,GACnBgJ,EAAanK,EAAOoB,GAEpB6F,EAAOgD,GAAWC,EAAWC,GAC7BM,EAAatT,KAAKS,IACtBwS,GAA2BF,EAAWC,IAExC,IAAI3M,EAGJ,GAAIiN,EAAa,EACfjN,EAAS,MACJ,CACwB,IAAzB0M,EAAUvJ,YAAoBuJ,EAAUtJ,UAAY,IAGtDsJ,EAAUhI,QAAQ,IAGpBgI,EAAUQ,SAASR,EAAUvJ,WAAasG,EAAOwD,GAIjD,IAAIE,EAAqBV,GAAWC,EAAWC,MAAiBlD,EAI9DsD,GAAiBvK,EAAOmB,KACT,IAAfsJ,GACqC,IAArCR,GAAW9I,EAAUgJ,KAErBQ,GAAqB,GAGvBnN,EAASyJ,GAAQwD,EAAapM,OAAOsM,GACvC,CAGA,OAAkB,IAAXnN,EAAe,EAAIA,CAC5B,CCxCO,SAASoN,GAA0BzJ,EAAUC,GAClD,MAAM8I,EAAYlK,EAAOmB,GACnBgJ,EAAanK,EAAOoB,GAE1B,OAAO8I,EAAUxJ,cAAgByJ,EAAWzJ,aAC9C,CCNO,SAASmK,GAAkB1J,EAAUC,GAC1C,MAAM8I,EAAYlK,EAAOmB,GACnBgJ,EAAanK,EAAOoB,GAEpB6F,EAAOgD,GAAWC,EAAWC,GAC7BM,EAAatT,KAAKS,IAAIgT,GAA0BV,EAAWC,IAIjED,EAAUtI,YAAY,MACtBuI,EAAWvI,YAAY,MAIvB,MACMpE,EAASyJ,GAAQwD,IADGR,GAAWC,EAAWC,MAAiBlD,IAIjE,OAAkB,IAAXzJ,EAAe,EAAIA,CAC5B,CC3CA,MAAM,GAAuB,CAC3B9E,iBAAkB,CAChBC,IAAK,sBACLC,MAAO,+BAGTC,SAAU,CACRF,IAAK,YACLC,MAAO,sBAGTE,YAAa,cAEbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,8BAGTI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAGTK,YAAa,CACXN,IAAK,kBACLC,MAAO,4BAGTM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAGTO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAGTQ,YAAa,CACXT,IAAK,oBACLC,MAAO,8BAGTS,OAAQ,CACNV,IAAK,WACLC,MAAO,qBAGTU,aAAc,CACZX,IAAK,iBACLC,MAAO,4BAGTW,QAAS,CACPZ,IAAK,QACLC,MAAO,mBAGTY,YAAa,CACXb,IAAK,iBACLC,MAAO,2BAGTa,OAAQ,CACNd,IAAK,QACLC,MAAO,kBAGTc,WAAY,CACVf,IAAK,gBACLC,MAAO,0BAGTe,aAAc,CACZhB,IAAK,cACLC,MAAO,yBCpDE,GAAa,CACxBhC,KAAMgD,EAAkB,CACtBK,QAvBgB,CAClBE,KAAM,2BACNC,KAAM,qBACNC,OAAQ,UACRC,MAAO,cAoBLN,aAAc,SAGhBO,KAAMX,EAAkB,CACtBK,QArBgB,CAClBE,KAAM,gBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,SAkBLN,aAAc,SAGhBQ,SAAUZ,EAAkB,CAC1BK,QAnBoB,CACtBE,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAgBLN,aAAc,UCpCZ,GAAuB,CAC3BU,SAAW9D,IACT,MAAMkU,EAAUlU,EAAKoL,SAErB,MAAO,KADkB,IAAZ8I,GAA6B,IAAZA,EAAgB,SAAW,UACrC,eAAe,EAErCnQ,UAAW,eACXC,MAAO,cACPC,SAAU,gBACVC,SAAU,cACVlC,MAAO,KCIImS,GAAO,CAClB3N,KAAM,QACNC,eH+D4B,CAACC,EAAOC,EAAOzD,KAC3C,IAAI0D,EAEJ,MAAMC,EAAa,GAAqBH,GASxC,OAPEE,EADwB,iBAAfC,EACAA,EACU,IAAVF,EACAE,EAAW9E,IAEX8E,EAAW7E,MAAMP,QAAQ,YAAa0B,OAAOwD,IAGpDzD,GAAS6D,UACP7D,EAAQ8D,YAAc9D,EAAQ8D,WAAa,EACtC,MAAQJ,EAER,MAAQA,EAIZA,CAAM,EGlFbtD,WAAY,GACZ2D,eDL4B,CAACP,EAAO1G,EAAMmH,EAAWC,KACrD,MAAM/F,EAAS,GAAqBqF,GAEpC,MAAsB,mBAAXrF,EACFA,EAAOrB,GAGTqB,CAAM,ECDbgG,SC+HsB,CACtBC,cAVoB,CAACC,EAAarE,KAClC,MAAMsE,EAASC,OAAOF,GAEtB,MAAsB,SAAlBrE,GAAS0K,KACJpG,EAAS,IAEXA,EAAS,GAAG,EAMnBG,IAAKxD,EAAgB,CACnBM,OApJc,CAChBmD,OAAQ,CAAC,KAAM,MACfC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,kBAAmB,qBAkJxB1E,aAAc,SAGhB2E,QAAS5D,EAAgB,CACvBM,OAnJkB,CACpBmD,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,eAAgB,eAAgB,eAAgB,iBAiJrD1E,aAAc,OACdsB,iBAAmBqD,GAAYA,EAAU,IAG3CC,MAAO7D,EAAgB,CACrBM,OAnJgB,CAClBmD,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFC,KAAM,CACJ,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,aAuHA1E,aAAc,SAGhB6E,IAAK9D,EAAgB,CACnBM,OAvHc,CAChBmD,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvClE,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDmE,YAAa,CACX,UACA,UACA,QACA,SACA,SACA,QACA,UAGFC,KAAM,CACJ,UACA,gBACA,cACA,eACA,eACA,cACA,WAoGA1E,aAAc,SAGhB8E,UAAW/D,EAAgB,CACzBM,OApGoB,CACtBmD,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,KACNC,QAAS,QACTC,UAAW,QACXC,QAAS,QACTC,MAAO,SAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,aACVC,KAAM,WACNC,QAAS,QACTC,UAAW,QACXC,QAAS,QACTC,MAAO,SAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,aACVC,KAAM,WACNC,QAAS,QACTC,UAAW,QACXC,QAAS,QACTC,MAAO,UAwEPtF,aAAc,OACdmB,iBArE8B,CAChCqD,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,KACNC,QAAS,WACTC,UAAW,WACXC,QAAS,WACTC,MAAO,YAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,aACVC,KAAM,WACNC,QAAS,WACTC,UAAW,WACXC,QAAS,WACTC,MAAO,YAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,aACVC,KAAM,WACNC,QAAS,WACTC,UAAW,WACXC,QAAS,WACTC,MAAO,aAyCPlE,uBAAwB,UD1J1BS,MEuEmB,CACnBqC,cAAelB,EAAoB,CACjCvB,aA1F8B,gBA2F9ByB,aA1F8B,OA2F9BJ,cAAgB9B,GAAUuE,SAASvE,EAAO,MAG5CuD,IAAKhD,EAAa,CAChBG,cA7FqB,CACvB8C,OAAQ,gBACRC,YAAa,8BACbC,KAAM,wCA2FJ/C,kBAAmB,OACnBI,cA1FqB,CACvByD,IAAK,CAAC,OAAQ,QACdd,KAAM,CAAC,oBAAqB,uBAyF1B1C,kBAAmB,QAGrB2C,QAASpD,EAAa,CACpBG,cA1FyB,CAC3B8C,OAAQ,WACRC,YAAa,YACbC,KAAM,0BAwFJ/C,kBAAmB,OACnBI,cAvFyB,CAC3ByD,IAAK,CAAC,KAAM,KAAM,KAAM,OAuFtBxD,kBAAmB,MACnBc,cAAgBtE,GAAUA,EAAQ,IAGpCoG,MAAOrD,EAAa,CAClBG,cAzFuB,CACzB8C,OAAQ,gBACRC,YAAa,sDACbC,KAAM,gGAuFJ/C,kBAAmB,OACnBI,cAtFuB,CACzByC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFgB,IAAK,CACH,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UA2DAxD,kBAAmB,QAGrB6C,IAAKtD,EAAa,CAChBG,cA3DqB,CACvB8C,OAAQ,2BACRlE,MAAO,2BACPmE,YAAa,qCACbC,KAAM,4EAwDJ/C,kBAAmB,OACnBI,cAvDqB,CACvBzB,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,WAClDkE,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,WACnDgB,IAAK,CAAC,MAAO,QAAS,MAAO,QAAS,QAAS,QAAS,aAqDtDxD,kBAAmB,QAGrB8C,UAAWvD,EAAa,CACtBG,cAtD2B,CAC7B8C,OAAQ,yCACRgB,IAAK,2EAqDH7D,kBAAmB,MACnBI,cApD2B,CAC7ByD,IAAK,CACHT,GAAI,MACJC,GAAI,MACJC,SAAU,uBACVC,KAAM,qBACNC,QAAS,SACTC,UAAW,SACXC,QAAS,SACTC,MAAO,WA4CPtD,kBAAmB,SF9GrBlC,QAAS,CACP2F,aAAc,EACdC,sBAAuB,IGHpB,MAAMsL,GAAoDzX,IAAe,IAAd,KAAE0X,GAAM,EACtE,MAAM7S,EAAY,IAAIf,KAAK4T,EAAK7S,WAC1B8S,EAAqBjT,GAAOG,EAAW,WAAY,CAAE2J,OAAQgJ,KAC7DI,EAAmBF,EAAKG,QACxBnT,GAAO,IAAIZ,KAAK4T,EAAKG,SAAU,WAAY,CAAErJ,OAAQgJ,KACrD,aAEAM,EAAMJ,EAAKG,QAAU,IAAI/T,KAAK4T,EAAKG,SAAW,IAAI/T,KAClDiU,EAASd,GAAmBa,EAAKjT,GACjCmT,EAAQV,GAAkBQ,EAAKjT,GAC/BoT,EAAkBF,EAAS,GAE3BG,EACFF,EAAQ,EACD,GAAEA,QAAYA,EAAQ,EAAI,IAAM,KAAKC,EAAkB,EACnD,MAAKA,QAAsBA,EAAkB,EAAI,KAAO,KACzD,KAEH,GAAEF,QAAaA,EAAS,EAAI,KAAO,KAE9C,OACIrX,EAAAA,cAACE,EAAAA,EAAOU,IAAG,CACPnB,UAAU,4CACVE,QAAS,CAAEC,QAAS,EAAG+B,EAAG,IAC1B7B,YAAa,CAAEF,QAAS,EAAG+B,EAAG,GAC9B5B,KAAM,CAAEH,QAAS,EAAG+B,EAAG,IACvBvB,WAAY,CAAEC,SAAU,KAExBL,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,oCACXO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,2CACXO,EAAAA,cAAAA,MAAAA,CACI6B,IAAI,wBACJE,MAAO,GACPC,OAAQ,GACRvC,UAAU,0CACVqC,IAAM,mBAAkBkV,EAAKS,iBAIrCzX,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,gCAGnBO,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,4CACXO,EAAAA,cAACkB,EAAAA,KAAI,CACDC,GAAI6V,EAAKU,WACTpW,OAAO,SACP7B,UAAU,0DACb,KACMuX,EAAKS,aAEZzX,EAAAA,cAAAA,KAAAA,CAAIP,UAAU,iBAAiBuX,EAAKW,MACpC3X,EAAAA,cAAAA,OAAAA,CAAMP,UAAU,iBACXwX,EAAmB,MAAIC,EAAiB,OAAKM,EAAkB,KAGpExX,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,iBAAiBuX,EAAKY,cAGvC5X,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,iDAAgD,gBAC7DO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,sDACVuX,EAAKa,aAAa/W,KAAI,CAACL,EAAMM,IAC1Bf,EAAAA,cAACQ,EAAK,CACFQ,IAAKD,EACLN,KAAMA,EACNd,QAAS,CAAEC,QAAS,EAAGqB,MAAO,GAC9BnB,YAAa,CAAEF,QAAS,EAAGqB,MAAO,GAClClB,KAAM,CAAEH,QAAS,EAAGqB,MAAO,GAC3Bb,WAAY,CAAEC,SAAU,GAAKE,MAAO,GAAU,GAAJQ,SAKjD,EC7CrB,OA5CuB,IAyBff,EAAAA,cAAAA,UAAAA,CAASP,UAAU,uEACfO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,iBACXO,EAAAA,cAACX,EAAAA,EAAY,CAACG,QAAQ,eAAeD,MAAM,6BAC3CS,EAAAA,cAAAA,IAAAA,CAAGP,UAAU,sBAAqB,yIAKtCO,EAAAA,cAAAA,MAAAA,CAAKP,UAAU,uBAhCI,CACvB,CACIgY,YAAa,sBACbC,WAAY,4FACZI,YAAa,4FACbF,YAAa,sFACbT,QAAS,aACTQ,KAAM,2BACNxT,UAAW,aACX0T,aAAc,CAAC,aAAc,aAAc,QAAS,UAAW,YAEnE,CACIJ,YAAa,sBACbC,WAAY,0EACZI,YAAa,0EACbF,YAAa,8DACbT,QAAS,aACTQ,KAAM,0BACNxT,UAAW,aACX0T,aAAc,CAAC,OAAQ,MAAO,aAAc,aAcpB/W,KAAKkW,GACrBhX,EAAAA,cAAAA,MAAAA,CAAKgB,IAAKgW,EAAKS,aACXzX,EAAAA,cAAC+W,GAAkB,CAACC,KAAMA,SChBlD,OAZuC,IAGnChX,EAAAA,cAAC+X,EAAAA,EAAU,KACT/X,EAAAA,cAACW,EAAW,MACZX,EAAAA,cAACsE,EAAS,MACVtE,EAAAA,cAACwC,EAAmB,MACpBxC,EAAAA,cAACgY,GAAc,OAOd,MAAMC,GAAe,IAAMjY,EAAAA,cAAAA,QAAAA,KAAO,c","sources":["webpack://portifolio/./src/components/section-title.tsx","webpack://portifolio/./src/components/badge.tsx","webpack://portifolio/./src/components/home/hero-section.tsx","webpack://portifolio/./src/components/project-card.tsx","webpack://portifolio/./src/components/divider-h.tsx","webpack://portifolio/./src/components/home/highlighted-section.tsx","webpack://portifolio/./src/components/know-tech.tsx","webpack://portifolio/./src/utils/relative-times.tsx","webpack://portifolio/./src/components/home/know-techs-section.tsx","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://portifolio/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://portifolio/./node_modules/date-fns/constants.mjs","webpack://portifolio/./node_modules/date-fns/toDate.mjs","webpack://portifolio/./node_modules/date-fns/startOfDay.mjs","webpack://portifolio/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://portifolio/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://portifolio/./node_modules/date-fns/constructFrom.mjs","webpack://portifolio/./node_modules/date-fns/startOfYear.mjs","webpack://portifolio/./node_modules/date-fns/getDayOfYear.mjs","webpack://portifolio/./node_modules/date-fns/startOfWeek.mjs","webpack://portifolio/./node_modules/date-fns/startOfISOWeek.mjs","webpack://portifolio/./node_modules/date-fns/getISOWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/getISOWeek.mjs","webpack://portifolio/./node_modules/date-fns/getWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/startOfWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/getWeek.mjs","webpack://portifolio/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://portifolio/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://portifolio/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://portifolio/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://portifolio/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://portifolio/./node_modules/date-fns/isDate.mjs","webpack://portifolio/./node_modules/date-fns/isValid.mjs","webpack://portifolio/./node_modules/date-fns/format.mjs","webpack://portifolio/./node_modules/date-fns/compareAsc.mjs","webpack://portifolio/./node_modules/date-fns/differenceInCalendarMonths.mjs","webpack://portifolio/./node_modules/date-fns/endOfDay.mjs","webpack://portifolio/./node_modules/date-fns/endOfMonth.mjs","webpack://portifolio/./node_modules/date-fns/isLastDayOfMonth.mjs","webpack://portifolio/./node_modules/date-fns/differenceInMonths.mjs","webpack://portifolio/./node_modules/date-fns/differenceInCalendarYears.mjs","webpack://portifolio/./node_modules/date-fns/differenceInYears.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/formatDistance.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/formatLong.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/formatRelative.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/localize.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/match.mjs","webpack://portifolio/./src/components/work-experience.tsx","webpack://portifolio/./src/components/home/work-experience-section.tsx","webpack://portifolio/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { cn } from \"../utils/cn\";\nimport { motion } from \"framer-motion\";\n\ninterface SectionTitleProps {\n    title: string\n    section: string\n    className: string\n}\n\nexport const SectionTitle: React.FC<SectionTitleProps> = ({ title, section, className }) => {\n\n    const animProps = {\n        initial: { opacity: 0, x: -100 },\n        whileInView: { opacity: 1, x: 0 },\n        exit: { opacity: 0, x: -100 }\n\n    }\n\n    return (\n        <div className={cn('flex flex-col gap-4', className)}>\n            <motion.span className=\"font-mono text-sm text-emerald-400\"\n                {...animProps}\n                transition={{ duration: 0.5 }}>\n                {`../amaurygomes/${section}`}\n            </motion.span>\n            <motion.h3 className=\"text-3xl font-medium\"\n                {...animProps}\n                transition={{ duration: 0.5, delay: 0.2 }}\n            >\n                {title}</motion.h3>\n\n\n        </div>\n    )\n}","import React from 'react';\nimport { motion, MotionProps } from 'framer-motion';\n\ninterface BadgeProps extends MotionProps {\n    tech: string;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ tech, ...rest }) => {\n    return (\n        <motion.span\n            className=\"text-emerald-400 bg-emerald-900 bg-opacity-80 text-sm py-1 px-3 rounded-lg\"\n            {...rest} \n        >\n            {tech}\n        </motion.span>\n    );\n};","import React from 'react';\nimport { Badge } from '../badge';\nimport { Link } from 'gatsby';\nimport { Button } from '../button';\nimport { FaFacebook, FaGithub, FaLinkedin, FaWhatsapp } from \"react-icons/fa\";\nimport { GrDocumentDownload } from \"react-icons/gr\";\nimport { motion } from 'framer-motion';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nexport const HeroSection = () => {\n\n    const techsData = [\n        { name: \"React\" },\n        { name: \"Node.js\" },\n        { name: \"Python\" },\n    ]\n\n    return (\n\n\n\n\n        <section className=\"w-full lg:h-[700px] bg-hero-image bg-cover bg-center bg-no-repeat flex flex-col justify-center pb-10 sm:pb-32 py-40 lg:pb-[110px]\">\n            <div className=\"container flex itens-start justify-between flex-col-reverse sm:flex-row\">\n\n                <motion.div className=\"w-full lg:max-w-[530px]  \"\n                    initial={{ opacity: 0, x: -100 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -100 }}\n                    transition={{ duration: 0.5 }}\n                >\n                    <p className=\"text-emerald-400 font-mono \">Olá, meu nome é</p>\n                    <h2 className=\"font-medium text-4xl mt-2\">John Doe</h2>\n                    <p className='text-gray-400 my-6 text-sm sm:text-base'>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Itaque, explicabo expedita omnis voluptate error tenetur quaerat consectetur! Sunt quis ipsam reprehenderit. Dolorem nesciunt fugit dolores? Laboriosam natus id sequi architecto?\n                    </p>\n                    <div className=\"flex flex-wrap gap-x-2 gap-y-3 lg:max-w-[340px]\">\n\n                        {techsData.map((tech, i) => (\n                            <Badge\n                                tech={tech.name}\n                                key={tech.name}\n                                initial={{ opacity: 0, scale: 0 }}\n                                whileInView={{ opacity: 1, scale: 1 }}\n                                exit={{ opacity: 0, scale: 0 }}\n                                transition={{ duration: 0.3, delay: i * 0.1 }}\n\n\n                            />\n                        ))}\n                    </div>\n\n                    <div className=\"mt-6 lg:mt-10 flex sm:items-center sm:gap-5 flex-col sm:flex-row\">\n                        <Link to='https://fb.com/amaurygomesibanez'>\n                            <Button className='shadow-button w-max'>Baixar CV <GrDocumentDownload /></Button>\n                        </Link>\n                        <div className=\"text-gray-600 text-2xl flex items-center h-20 gap-3\">\n                            <Link to='https://fb.com/amaurygomesibanez' target='_blank'>\n                                <FaFacebook />\n                            </Link>\n                            <Link to='https://wa.me/67991044105' target='_blank'>\n                                <FaWhatsapp />\n                            </Link>\n                            <Link to='https://github.com/amaurygomes' target='_blank'>\n                                <FaGithub />\n                            </Link>\n                            <Link to='https://linkedin.com/amaurygomes' target='_blank'>\n                                <FaLinkedin />\n                            </Link>\n                        </div>\n                    </div>\n\n                </motion.div>\n\n                <motion.div className=\"rounded-sm origin-center\"\n                    initial={{ opacity: 0, y: 200, scale: 0.5 }}\n                    whileInView={{ opacity: 1, y: 0, scale: 1 }}\n                    exit={{ opacity: 0, y: 200, scale: 0.5 }}\n                    transition={{ duration: 0.5 }}\n                >\n                    <StaticImage className='w-[300px] h-[300px] lg:w-[420px] lg:h-[404px] mb-6 lg:mb-0 shadow-2xl rounded-lg object-cover'\n                        src=\"/img/monkey.jpg\"\n                        alt=\"Profile Picture\"\n                        width={420}\n                        height={404}\n                        loading='lazy'\n                    />\n                </motion.div>\n\n            </div>\n        </section>\n\n    )\n}","import React from \"react\";\nimport { Badge } from \"./badge\";\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\nimport { Link } from \"gatsby\";\nimport { motion } from \"framer-motion\";\nimport { StaticImage } from 'gatsby-plugin-image';\n\nexport const ProjectCard = () => {\n\n    const animProps = {\n        initial: { opacity: 0, y: 50 },\n        whileInView: { opacity: 1, y: 0 },\n        exit: { opacity: 0, y: 50 },\n    }\n\n    return (\n        <motion.div className=\"flex gap-6 lg:gap-12 flex-col lg:flex-row\"\n            initial={{ opacity: 0, y: 100 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 100 }}\n            transition={{ duration: 0.5 }}\n        >\n            <StaticImage src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHMKEz6iol33k1HHNgoyoQVwC2gxrb-a7kew&s://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.secretstache.com%2Fblog%2Fstop-using-lorem-ipsum%2F&psig=AOvVaw3E-RlNbgyLOsJUfojYAqfa&ust=1719780647689000&source=images&cd=vfe&opi=89978449&ved=0CBEQjRxqFwoTCMiZxqzYgYcDFQAAAAAdAAAAABAE\"\n                alt=\"Thumbnail Project\"\n                width={420}\n                height={304}\n                loading=\"lazy\"\n                className=\"w-full h-[200px] sm:h-[300px] lg:w-[420px] lg:min-h-full object-cover rounded-lg\"\n            />\n            <div>\n                <motion.h3 className=\"flex items-center gap-3 font-medium text-lg text-gray-50\"\n                    {...animProps}\n                    transition={{ duration: 0.7 }}\n                >\n                    <img\n                        src=\"/icons/icon-48x48.png\"\n                        alt=\"Logo\"\n                        width={20}\n                        height={20}\n                    />\n                    Loren Project\n                </motion.h3>\n                <motion.p className=\"text-gray-400 my-6\"\n                    {...animProps}\n                    transition={{ duration: 0.2, delay: 0.3 }}\n                >\n                    Lorem ipsum dolor sit amet\n                </motion.p>\n                <div className=\"flex gap-x-2 gap-y-3 flex-wrap mb-8 lg:max-w-[350px]\">\n                    <Badge tech=\"Nextjs\" />\n                    <Badge tech=\"Python\" />\n                    <Badge tech=\"Grahpene\" />\n                </div>\n                <Link to=\"/project/id\" className=\"flex items-center gap-2 text-gray-300 text-sm hover:text-emerald-500 transition-colors\">\n                    Ver Projeto\n                    <HiArrowNarrowRight />\n                </Link>\n            </div>\n        </motion.div>\n    )\n\n}","import React from \"react\"\nimport { cn } from \"../utils/cn\"\n\n\ntype HorizontalDividerProps = {\n  className?: string\n}\n\nexport const HorizontalDivider = ({ className }: HorizontalDividerProps) => {\n  return (\n    <div className={cn('w-full my-8 border-b border-b-gray-800', className)} />\n  )\n}","import React from \"react\";\nimport { ProjectCard } from \"../project-card\";\nimport { SectionTitle } from \"../section-title\";\nimport { HorizontalDivider } from \"../divider-h\";\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\nimport { Link } from \"gatsby\";\n\ninterface SectionTitleProps {\n\n    title: string\n    section: string\n}\n\nexport const HighLightedProjects = () => {\n    return (\n        <section className=\"container py-16\">\n\n            <div>\n\n                <SectionTitle title=\"Projetos em Destaque\" section=\"destaques\" className=\"\"/>\n                <HorizontalDivider className=\"mb-16\" />\n                <ProjectCard />\n                <HorizontalDivider className=\"mb-16\" />\n                <ProjectCard />\n                <HorizontalDivider className=\"mb-16\" />\n                <ProjectCard />\n                <HorizontalDivider className=\"mb-16\" />\n                <p className=\"flex items-center gap-1.5\">\n                    <span className=\"text-gray-400\">Se interessou?</span>\n                    <Link to=\"/projects\" className=\"flex items-center gap-2 text-gray-300 text-sm hover:text-emerald-500 transition-colors\">\n                        Ver todos\n                        <HiArrowNarrowRight />\n                    </Link>\n                </p>\n\n            </div>\n\n        </section>\n    )\n}","import React from \"react\";\nimport { getRelativeTimeString } from \"../utils/relative-times\";\nimport { IconSvg } from \"../utils/icon-svg\";\nimport { FaCode } from \"react-icons/fa\";\n\ninterface KnowTechProps {\n    tech: {\n        name: string\n        startDate: string\n    }\n}\n\n\n\nexport const KnowTech: React.FC<KnowTechProps> = ({ tech }) => {\n\n    const relativeTime = getRelativeTimeString(\n        new Date(tech.startDate),\n        'pt-BR',\n      ).replace('há ', '')\n\n    return (\n        <div className=\"p-6 rounded-lg bg-gray-600/20 text-gray-500 flex flex-col gap-2 hover:text-emerald-500 hover:bg-gray-600/30 transition-all\">\n            <div className=\"flex items-center justify-between\">\n                <p className=\"font-medium\">{tech.name}</p>\n                <FaCode />\n            </div>\n            <span>{relativeTime} de experiência</span>\n        </div>\n    )\n}\n","/**\n * Convert a date to a relative time string, such as\n * \"a minute ago\", \"in 2 hours\", \"yesterday\", \"3 months ago\", etc.\n * using Intl.RelativeTimeFormat\n */\nexport function getRelativeTimeString(\n  date: Date | number,\n  lang = navigator.language,\n): string {\n  // Allow dates or times to be passed\n  const timeMs = typeof date === 'number' ? date : date.getTime()\n\n  // Get the amount of seconds between the given date and now\n  const deltaSeconds = Math.round((timeMs - Date.now()) / 1000)\n\n  // Array reprsenting one minute, hour, day, week, month, etc in seconds\n  const cutoffs = [\n    60,\n    3600,\n    86400,\n    86400 * 7,\n    86400 * 30,\n    86400 * 365,\n    Infinity,\n  ]\n\n  // Array equivalent to the above but in the string representation of the units\n  const units: Intl.RelativeTimeFormatUnit[] = [\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'week',\n    'month',\n    'year',\n  ]\n\n  // Grab the ideal cutoff unit\n  const unitIndex = cutoffs.findIndex(\n    (cutoff) => cutoff > Math.abs(deltaSeconds),\n  )\n\n  // Get the divisor to divide from the seconds. E.g. if our unit is \"day\" our divisor\n  // is one day in seconds, so we can divide our seconds by this to get the # of days\n  const divisor = unitIndex ? cutoffs[unitIndex - 1] : 1\n\n  // Intl.RelativeTimeFormat do its magic\n  const rtf = new Intl.RelativeTimeFormat(lang, { numeric: 'auto' })\n  return rtf.format(Math.floor(deltaSeconds / divisor), units[unitIndex])\n}","import React from \"react\";\nimport { SectionTitle } from \"../section-title\";\nimport { HorizontalDivider } from \"../divider-h\";\nimport { KnowTech } from \"../know-tech\";\nimport { motion } from \"framer-motion\";\n\n\n\nexport const KnowTechs = () => {\n\n    const techsData = [\n        { name: \"React\", startDate: \"2023-05-29\" },\n        { name: \"Node.js\",  startDate: \"2020-05-27\" },\n        { name: \"Python\",  startDate: \"2024-02-20\" },\n        { name: \"Tailwind\",  startDate: \"2022-05-23\" },\n        { name: \"Typescript\",  startDate: \"2020-05-27\" },\n        { name: \"C++\",  startDate: \"2024-02-20\" },\n        { name: \"Django\",  startDate: \"2022-05-23\" },\n    ]\n\n\n    return (\n        <section className=\"container py-16\">\n            <SectionTitle title=\"Conhecimentos\" section=\"competencias\" className=\"\"/>\n            <HorizontalDivider className=\"mb-16\" />\n            <div className=\"grid grid-cols-[repeat(auto-fit,minmax(265px,1fr))] gap-3 mt-[60px]\">\n            {techsData.map((tech, index) => (\n                <motion.div\n                key={ index }\n                initial={{opacity:0, x: -100}}\n                whileInView={{opacity:1, x:0}}\n                exit={{opacity:0, x: -100}}\n                transition={{duration:0.15, delay: index * 0.1}}\n                >\n                <KnowTech  tech={tech} />\n                </motion.div>\n            ))}\n        </div>\n        </section >\n    )\n}","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport function differenceInCalendarYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  return _dateLeft.getFullYear() - _dateRight.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos de um segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"meio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos de um minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"cerca de 1 hora\",\n    other: \"cerca de {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 dia\",\n    other: \"{{count}} dias\",\n  },\n\n  aboutXWeeks: {\n    one: \"cerca de 1 semana\",\n    other: \"cerca de {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"cerca de 1 mês\",\n    other: \"cerca de {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 mês\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"cerca de 1 ano\",\n    other: \"cerca de {{count}} anos\",\n  },\n\n  xYears: {\n    one: \"1 ano\",\n    other: \"{{count}} anos\",\n  },\n\n  overXYears: {\n    one: \"mais de 1 ano\",\n    other: \"mais de {{count}} anos\",\n  },\n\n  almostXYears: {\n    one: \"quase 1 ano\",\n    other: \"quase {{count}} anos\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"em \" + result;\n    } else {\n      return \"há \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM 'de' y\",\n  long: \"d 'de' MMMM 'de' y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'às' {{time}}\",\n  long: \"{{date}} 'às' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const weekday = date.getDay();\n    const last = weekday === 0 || weekday === 6 ? \"último\" : \"última\";\n    return \"'\" + last + \"' eeee 'às' p\";\n  },\n  yesterday: \"'ontem às' p\",\n  today: \"'hoje às' p\",\n  tomorrow: \"'amanhã às' p\",\n  nextWeek: \"eeee 'às' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n","import { formatDistance } from \"./pt-BR/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./pt-BR/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./pt-BR/_lib/formatRelative.mjs\";\nimport { localize } from \"./pt-BR/_lib/localize.mjs\";\nimport { match } from \"./pt-BR/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Portuguese locale (Brazil).\n * @language Portuguese\n * @iso-639-2 por\n * @author Lucas Duailibe [@duailibe](https://github.com/duailibe)\n * @author Yago Carballo [@yagocarballo](https://github.com/YagoCarballo)\n */\nexport const ptBR = {\n  code: \"pt-BR\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ptBR;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"AC\", \"DC\"],\n  abbreviated: [\"AC\", \"DC\"],\n  wide: [\"antes de cristo\", \"depois de cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan\",\n    \"fev\",\n    \"mar\",\n    \"abr\",\n    \"mai\",\n    \"jun\",\n    \"jul\",\n    \"ago\",\n    \"set\",\n    \"out\",\n    \"nov\",\n    \"dez\",\n  ],\n\n  wide: [\n    \"janeiro\",\n    \"fevereiro\",\n    \"março\",\n    \"abril\",\n    \"maio\",\n    \"junho\",\n    \"julho\",\n    \"agosto\",\n    \"setembro\",\n    \"outubro\",\n    \"novembro\",\n    \"dezembro\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n  short: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"sab\"],\n  abbreviated: [\n    \"domingo\",\n    \"segunda\",\n    \"terça\",\n    \"quarta\",\n    \"quinta\",\n    \"sexta\",\n    \"sábado\",\n  ],\n\n  wide: [\n    \"domingo\",\n    \"segunda-feira\",\n    \"terça-feira\",\n    \"quarta-feira\",\n    \"quinta-feira\",\n    \"sexta-feira\",\n    \"sábado\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"manhã\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manhã\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manhã\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"da manhã\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manhã\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manhã\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  if (options?.unit === \"week\") {\n    return number + \"ª\";\n  }\n  return number + \"º\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)[ºªo]?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|d\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|depois de cristo)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [/^antes de cristo/i, /^depois de cristo/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](º)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmajsond]/i,\n  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,\n  wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^fev/i,\n    /^mar/i,\n    /^abr/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^ago/i,\n    /^set/i,\n    /^out/i,\n    /^nov/i,\n    /^dez/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(dom|[23456]ª?|s[aá]b)/i,\n  short: /^(dom|[23456]ª?|s[aá]b)/i,\n  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,\n  wide: /^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i,\n};\nconst parseDayPatterns = {\n  short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],\n  narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],\n  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[aá]b/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i,\n  any: /^([ap]\\.?\\s?m\\.?|meia[-\\s]noite|meio[-\\s]dia|(da) (manhã|tarde|noite))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn|^meia[-\\s]noite/i,\n    noon: /^md|^meio[-\\s]dia/i,\n    morning: /manhã/i,\n    afternoon: /tarde/i,\n    evening: /tarde/i,\n    night: /noite/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import React from \"react\";\nimport { format, differenceInMonths, differenceInYears } from \"date-fns\";\nimport { ptBR } from 'date-fns/locale';\nimport { motion } from \"framer-motion\";\nimport { Link } from \"gatsby\";\nimport { Badge } from \"./badge\";\n\ninterface WorkExperienceProps {\n    work: {\n        companyName: string;\n        companyUrl: string;\n        companyLogo: string; // Aqui está correto, companyLogo em camelCase\n        description?: string;\n        endDate: string;\n        role: string;\n        startDate: string;\n        technologies: string[];\n    };\n}\n\nexport const WorkExperienceItem: React.FC<WorkExperienceProps> = ({ work }) => {\n    const startDate = new Date(work.startDate);\n    const formattedStartDate = format(startDate, 'MMM yyyy', { locale: ptBR });\n    const formattedEndDate = work.endDate\n        ? format(new Date(work.endDate), 'MMM yyyy', { locale: ptBR })\n        : 'Atualmente';\n\n    const end = work.endDate ? new Date(work.endDate) : new Date();\n    const months = differenceInMonths(end, startDate);\n    const years = differenceInYears(end, startDate);\n    const monthsRemaining = months % 12;\n\n    const formattedDuration =\n        years > 0\n            ? `${years} ano${years > 1 ? 's' : ''}${monthsRemaining > 0\n                ? ` e ${monthsRemaining} mês${monthsRemaining > 1 ? 'es' : ''}`\n                : ''\n            }`\n            : `${months} mês${months > 1 ? 'es' : ''}`;\n\n    return (\n        <motion.div\n            className=\"grid grid-cols-[40px,1fr] gap-4 md:gap-10\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n            transition={{ duration: 0.5 }}\n        >\n            <div className=\"flex items-center flex-col gap-4\">\n                <div className=\"rounded-lg border border-gray-500 p-0.5\">\n                    <img\n                        src='/icons/icon-48x48.png'\n                        width={40}\n                        height={40}\n                        className=\"rounded-lg object-contain h-full w-full\"\n                        alt={`Logo da empresa ${work.companyName}`}\n                    />\n                </div>\n\n                <div className=\"h-full w-[1px] bg-gray-800\" />\n            </div>\n\n            <div>\n                <div className=\"flex flex-col gap-2 text-sm sm:text-base\">\n                    <Link\n                        to={work.companyUrl}\n                        target=\"_blank\"\n                        className=\"text-gray-500 hover:text-emerald-500 transition-colors\"\n                    >\n                        @ {work.companyName}\n                    </Link>\n                    <h4 className=\"text-gray-300\">{work.role}</h4>\n                    <span className=\"text-gray-500\">\n                        {formattedStartDate} • {formattedEndDate} • ({formattedDuration})\n                    </span>\n\n                    <p className=\"text-gray-400\">{work.description}</p>\n                </div>\n\n                <p className=\"text-gray-400 text-sm mb-3 mt-6 font-semibold\">Competências</p>\n                <div className=\"flex gap-x-2 gap-y-3 flex-wrap lg:max-w-[350] mb-8\">\n                    {work.technologies.map((tech, i) => (\n                        <Badge\n                            key={i}\n                            tech={tech}\n                            initial={{ opacity: 0, scale: 0 }}\n                            whileInView={{ opacity: 1, scale: 1 }}\n                            exit={{ opacity: 0, scale: 0 }}\n                            transition={{ duration: 0.2, delay: 0.5 + i * 0.1 }}\n                        />\n                    ))}\n                </div>\n            </div>\n        </motion.div>\n    );\n};\n\nexport default WorkExperienceItem;\n","import React from \"react\";\nimport { SectionTitle } from \"../section-title\";\nimport { WorkExperienceItem } from \"../work-experience\";\n\nconst WorkExperience = () => {\n    const workExperienceData = [\n        {\n            companyName: \"Tech Solutions Inc.\",\n            companyUrl: \"https://t4.ftcdn.net/jpg/07/04/77/31/240_F_704773105_g7Av00xoHGhbDye1tFEIMTYn0cog7eOk.jpg\",\n            companyLogo: \"https://t4.ftcdn.net/jpg/07/04/77/31/240_F_704773105_g7Av00xoHGhbDye1tFEIMTYn0cog7eOk.jpg\",\n            description: \"Trabalhei como desenvolvedor full-stack, participando de projetos de grande escala.\",\n            endDate: \"2023-05-31\",\n            role: \"Desenvolvedor Full-Stack\",\n            startDate: \"2020-09-01\",\n            technologies: [\"JavaScript\", \"TypeScript\", \"React\", \"Node.js\", \"MongoDB\"]\n        },\n        {\n            companyName: \"Web Development Co.\",\n            companyUrl: \"https://i.pinimg.com/736x/28/08/c2/2808c2a15aa639d7f66866c123e76144.jpg\",\n            companyLogo: \"https://i.pinimg.com/736x/28/08/c2/2808c2a15aa639d7f66866c123e76144.jpg\",\n            description: \"Desenvolvi e mantive aplicações web para clientes diversos.\",\n            endDate: \"2020-08-15\",\n            role: \"Desenvolvedor Front-End\",\n            startDate: \"2018-03-15\",\n            technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"Angular\"]\n        }\n    ];\n\n    return (\n        <section className=\"container py-16 flex gap-10 md:gap-4 lg:gap-16 flex-col md:flex-row\">\n            <div className=\"max-w-[420px]\">\n                <SectionTitle section=\"experiencias\" title=\"Experiência profissional\" />\n                <p className=\"text-gray-400 mt-6\">\n                    Estou sempre aberto a novos desafios e projetos emocionantes. Vamos trabalhar juntos para criar soluções incríveis para sua empresa!\n                </p>\n            </div>\n\n            <div className=\"flex flex-col gap-4\">\n                {workExperienceData.map((work) => (\n                    <div key={work.companyName}>\n                        <WorkExperienceItem work={work} />\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default WorkExperience;\n","import * as React from \"react\"\nimport { type HeadFC, type PageProps } from \"gatsby\"\nimport { RootLayout } from '../components/layout'\nimport { HeroSection } from \"../components/home/hero-section\"\nimport { HighLightedProjects } from \"../components/home/highlighted-section\"\nimport { KnowTechs } from \"../components/home/know-techs-section\"\nimport WorkExperience from \"../components/home/work-experience-section\"\n\n\n\n\n\nconst IndexPage: React.FC<PageProps> = ( ) => {\n\n  return (\n    <RootLayout>\n      <HeroSection/>\n      <KnowTechs/>\n      <HighLightedProjects/>\n      <WorkExperience/>\n    </RootLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Amauy Gomes</title>\n"],"names":["SectionTitle","_ref","title","section","className","animProps","initial","opacity","x","whileInView","exit","React","cn","motion","span","transition","duration","h3","delay","Badge","tech","rest","HeroSection","div","name","map","i","key","scale","Link","to","Button","GrDocumentDownload","target","FaFacebook","FaWhatsapp","FaGithub","FaLinkedin","y","StaticImage","src","alt","width","height","loading","__error","ProjectCard","__imageData","p","HiArrowNarrowRight","HorizontalDivider","HighLightedProjects","KnowTech","relativeTime","date","lang","navigator","language","timeMs","getTime","deltaSeconds","Math","round","Date","now","cutoffs","Infinity","unitIndex","findIndex","cutoff","abs","divisor","Intl","RelativeTimeFormat","numeric","format","floor","getRelativeTimeString","startDate","replace","FaCode","KnowTechs","index","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","length","pattern","test","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","slice","buildMatchPatternFn","parseResult","parsePattern","enUS","code","formatDistance","token","count","result","tokenValue","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parseInt","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","constructFrom","startOfYear","cleanDate","setFullYear","getDayOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","padStart","lightFormatters","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isDate","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","compareAsc","_dateLeft","_dateRight","differenceInCalendarMonths","endOfDay","endOfMonth","isLastDayOfMonth","differenceInMonths","difference","setMonth","isLastMonthNotFull","differenceInCalendarYears","differenceInYears","weekday","ptBR","WorkExperienceItem","work","formattedStartDate","formattedEndDate","endDate","end","months","years","monthsRemaining","formattedDuration","companyName","companyUrl","role","description","technologies","companyLogo","RootLayout","WorkExperience","Head"],"sourceRoot":""}