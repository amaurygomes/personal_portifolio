{"version":3,"file":"component---src-pages-index-tsx-2ba5e63149dd057db5a0.js","mappings":"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","sources":["webpack://portifolio/./node_modules/camelcase/index.js","webpack://portifolio/../src/image-utils.ts","webpack://portifolio/../src/components/hooks.ts","webpack://portifolio/../src/components/layout-wrapper.tsx","webpack://portifolio/../src/components/picture.tsx","webpack://portifolio/../src/components/placeholder.tsx","webpack://portifolio/../src/components/main-image.tsx","webpack://portifolio/../src/components/gatsby-image.server.tsx","webpack://portifolio/../src/components/gatsby-image.browser.tsx","webpack://portifolio/../src/components/static-image.server.tsx","webpack://portifolio/../src/components/static-image.tsx","webpack://portifolio/./src/components/section-title.tsx","webpack://portifolio/./src/components/badge.tsx","webpack://portifolio/./src/components/home/hero-section.tsx","webpack://portifolio/./src/components/project-card.tsx","webpack://portifolio/./src/components/divider-h.tsx","webpack://portifolio/./src/components/home/highlighted-section.tsx","webpack://portifolio/./src/components/know-tech.tsx","webpack://portifolio/./src/utils/relative-times.tsx","webpack://portifolio/./src/components/home/know-techs-section.tsx","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US.mjs","webpack://portifolio/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://portifolio/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://portifolio/./node_modules/date-fns/constants.mjs","webpack://portifolio/./node_modules/date-fns/toDate.mjs","webpack://portifolio/./node_modules/date-fns/startOfDay.mjs","webpack://portifolio/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://portifolio/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://portifolio/./node_modules/date-fns/constructFrom.mjs","webpack://portifolio/./node_modules/date-fns/startOfYear.mjs","webpack://portifolio/./node_modules/date-fns/getDayOfYear.mjs","webpack://portifolio/./node_modules/date-fns/startOfWeek.mjs","webpack://portifolio/./node_modules/date-fns/startOfISOWeek.mjs","webpack://portifolio/./node_modules/date-fns/getISOWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/getISOWeek.mjs","webpack://portifolio/./node_modules/date-fns/getWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/startOfWeekYear.mjs","webpack://portifolio/./node_modules/date-fns/getWeek.mjs","webpack://portifolio/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://portifolio/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://portifolio/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://portifolio/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://portifolio/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://portifolio/./node_modules/date-fns/isDate.mjs","webpack://portifolio/./node_modules/date-fns/isValid.mjs","webpack://portifolio/./node_modules/date-fns/format.mjs","webpack://portifolio/./node_modules/date-fns/compareAsc.mjs","webpack://portifolio/./node_modules/date-fns/differenceInCalendarMonths.mjs","webpack://portifolio/./node_modules/date-fns/endOfDay.mjs","webpack://portifolio/./node_modules/date-fns/endOfMonth.mjs","webpack://portifolio/./node_modules/date-fns/isLastDayOfMonth.mjs","webpack://portifolio/./node_modules/date-fns/differenceInMonths.mjs","webpack://portifolio/./node_modules/date-fns/differenceInCalendarYears.mjs","webpack://portifolio/./node_modules/date-fns/differenceInYears.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/formatDistance.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/formatLong.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/formatRelative.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/localize.mjs","webpack://portifolio/./node_modules/date-fns/locale/pt-BR/_lib/match.mjs","webpack://portifolio/./src/components/work-experience.tsx","webpack://portifolio/./src/components/home/work-experience-section.tsx","webpack://portifolio/./src/pages/index.tsx"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\nimport { cn } from \"../utils/cn\";\nimport { motion } from \"framer-motion\";\n\ninterface SectionTitleProps {\n    title: string\n    section: string\n    className: string\n}\n\nexport const SectionTitle: React.FC<SectionTitleProps> = ({ title, section, className }) => {\n\n    const animProps = {\n        initial: { opacity: 0, x: -100 },\n        whileInView: { opacity: 1, x: 0 },\n        exit: { opacity: 0, x: -100 }\n\n    }\n\n    return (\n        <div className={cn('flex flex-col gap-4', className)}>\n            <motion.span className=\"font-mono text-sm text-emerald-400\"\n                {...animProps}\n                transition={{ duration: 0.5 }}>\n                {`../amaurygomes/${section}`}\n            </motion.span>\n            <motion.h3 className=\"text-3xl font-medium\"\n                {...animProps}\n                transition={{ duration: 0.5, delay: 0.2 }}\n            >\n                {title}</motion.h3>\n\n\n        </div>\n    )\n}","import React from 'react';\nimport { motion, MotionProps } from 'framer-motion';\n\ninterface BadgeProps extends MotionProps {\n    tech: string;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ tech, ...rest }) => {\n    return (\n        <motion.span\n            className=\"text-emerald-400 bg-emerald-900 bg-opacity-80 text-sm py-1 px-3 rounded-lg\"\n            {...rest} \n        >\n            {tech}\n        </motion.span>\n    );\n};","import React from 'react';\nimport { Badge } from '../badge';\nimport { Link } from 'gatsby';\nimport { Button } from '../button';\nimport { FaFacebook, FaGithub, FaLinkedin, FaWhatsapp } from \"react-icons/fa\";\nimport { GrDocumentDownload } from \"react-icons/gr\";\nimport { motion } from 'framer-motion';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nexport const HeroSection = () => {\n\n    const techsData = [\n        { name: \"React\" },\n        { name: \"Node.js\" },\n        { name: \"Python\" },\n    ]\n\n    return (\n\n\n\n\n        <section className=\"w-full lg:h-[700px] bg-hero-image bg-cover bg-center bg-no-repeat flex flex-col justify-center pb-10 sm:pb-32 py-40 lg:pb-[110px]\">\n            <div className=\"container flex itens-start justify-between flex-col-reverse sm:flex-row\">\n\n                <motion.div className=\"w-full lg:max-w-[530px]  \"\n                    initial={{ opacity: 0, x: -100 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -100 }}\n                    transition={{ duration: 0.5 }}\n                >\n                    <p className=\"text-emerald-400 font-mono \">Olá, meu nome é</p>\n                    <h2 className=\"font-medium text-4xl mt-2\">John Doe</h2>\n                    <p className='text-gray-400 my-6 text-sm sm:text-base'>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Itaque, explicabo expedita omnis voluptate error tenetur quaerat consectetur! Sunt quis ipsam reprehenderit. Dolorem nesciunt fugit dolores? Laboriosam natus id sequi architecto?\n                    </p>\n                    <div className=\"flex flex-wrap gap-x-2 gap-y-3 lg:max-w-[340px]\">\n\n                        {techsData.map((tech, i) => (\n                            <Badge\n                                tech={tech.name}\n                                key={tech.name}\n                                initial={{ opacity: 0, scale: 0 }}\n                                whileInView={{ opacity: 1, scale: 1 }}\n                                exit={{ opacity: 0, scale: 0 }}\n                                transition={{ duration: 0.3, delay: i * 0.1 }}\n\n\n                            />\n                        ))}\n                    </div>\n\n                    <div className=\"mt-6 lg:mt-10 flex sm:items-center sm:gap-5 flex-col sm:flex-row\">\n                        <Link to='https://fb.com/amaurygomesibanez'>\n                            <Button className='shadow-button w-max'>Baixar CV <GrDocumentDownload /></Button>\n                        </Link>\n                        <div className=\"text-gray-600 text-2xl flex items-center h-20 gap-3\">\n                            <Link to='https://fb.com/amaurygomesibanez' target='_blank'>\n                                <FaFacebook />\n                            </Link>\n                            <Link to='https://wa.me/67991044105' target='_blank'>\n                                <FaWhatsapp />\n                            </Link>\n                            <Link to='https://github.com/amaurygomes' target='_blank'>\n                                <FaGithub />\n                            </Link>\n                            <Link to='https://linkedin.com/amaurygomes' target='_blank'>\n                                <FaLinkedin />\n                            </Link>\n                        </div>\n                    </div>\n\n                </motion.div>\n\n                <motion.div className=\"rounded-sm origin-center\"\n                    initial={{ opacity: 0, y: 200, scale: 0.5 }}\n                    whileInView={{ opacity: 1, y: 0, scale: 1 }}\n                    exit={{ opacity: 0, y: 200, scale: 0.5 }}\n                    transition={{ duration: 0.5 }}\n                >\n                    <StaticImage className='w-[300px] h-[300px] lg:w-[420px] lg:h-[404px] mb-6 lg:mb-0 shadow-2xl rounded-lg object-cover'\n                        src=\"../../images/monkey.jpg\"\n                        alt=\"Profile Picture\"\n                        width={420}\n                        height={404}\n                        loading='lazy'\n                    />\n                </motion.div>\n\n            </div>\n        </section>\n\n    )\n}","import React from \"react\";\nimport { Badge } from \"./badge\";\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\nimport { Link } from \"gatsby\";\nimport { motion } from \"framer-motion\";\nimport { StaticImage } from 'gatsby-plugin-image';\n\nexport const ProjectCard = () => {\n\n    const animProps = {\n        initial: { opacity: 0, y: 50 },\n        whileInView: { opacity: 1, y: 0 },\n        exit: { opacity: 0, y: 50 },\n    }\n\n    return (\n        <motion.div className=\"flex gap-6 lg:gap-12 flex-col lg:flex-row\"\n            initial={{ opacity: 0, y: 100 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 100 }}\n            transition={{ duration: 0.5 }}\n        >\n            <StaticImage src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHMKEz6iol33k1HHNgoyoQVwC2gxrb-a7kew&s://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.secretstache.com%2Fblog%2Fstop-using-lorem-ipsum%2F&psig=AOvVaw3E-RlNbgyLOsJUfojYAqfa&ust=1719780647689000&source=images&cd=vfe&opi=89978449&ved=0CBEQjRxqFwoTCMiZxqzYgYcDFQAAAAAdAAAAABAE\"\n                alt=\"Thumbnail Project\"\n                width={420}\n                height={304}\n                loading=\"lazy\"\n                className=\"w-full h-[200px] sm:h-[300px] lg:w-[420px] lg:min-h-full object-cover rounded-lg\"\n            />\n            <div>\n                <motion.h3 className=\"flex items-center gap-3 font-medium text-lg text-gray-50\"\n                    {...animProps}\n                    transition={{ duration: 0.7 }}\n                >\n                    <img\n                        src=\"/icons/icon-48x48.png\"\n                        alt=\"Logo\"\n                        width={20}\n                        height={20}\n                    />\n                    Loren Project\n                </motion.h3>\n                <motion.p className=\"text-gray-400 my-6\"\n                    {...animProps}\n                    transition={{ duration: 0.2, delay: 0.3 }}\n                >\n                    Lorem ipsum dolor sit amet\n                </motion.p>\n                <div className=\"flex gap-x-2 gap-y-3 flex-wrap mb-8 lg:max-w-[350px]\">\n                    <Badge tech=\"Nextjs\" />\n                    <Badge tech=\"Python\" />\n                    <Badge tech=\"Grahpene\" />\n                </div>\n                <Link to=\"/project/id\" className=\"flex items-center gap-2 text-gray-300 text-sm hover:text-emerald-500 transition-colors\">\n                    Ver Projeto\n                    <HiArrowNarrowRight />\n                </Link>\n            </div>\n        </motion.div>\n    )\n\n}","import React from \"react\"\nimport { cn } from \"../utils/cn\"\n\n\ntype HorizontalDividerProps = {\n  className?: string\n}\n\nexport const HorizontalDivider = ({ className }: HorizontalDividerProps) => {\n  return (\n    <div className={cn('w-full my-8 border-b border-b-gray-800', className)} />\n  )\n}","import React from \"react\";\nimport { ProjectCard } from \"../project-card\";\nimport { SectionTitle } from \"../section-title\";\nimport { HorizontalDivider } from \"../divider-h\";\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\nimport { Link } from \"gatsby\";\n\ninterface SectionTitleProps {\n\n    title: string\n    section: string\n}\n\nexport const HighLightedProjects = () => {\n    return (\n        <section className=\"container py-16\">\n\n            <div>\n\n                <SectionTitle title=\"Projetos em Destaque\" section=\"destaques\" className=\"\"/>\n                <HorizontalDivider className=\"mb-16\" />\n                <ProjectCard />\n                <HorizontalDivider className=\"mb-16\" />\n                <ProjectCard />\n                <HorizontalDivider className=\"mb-16\" />\n                <ProjectCard />\n                <HorizontalDivider className=\"mb-16\" />\n                <p className=\"flex items-center gap-1.5\">\n                    <span className=\"text-gray-400\">Se interessou?</span>\n                    <Link to=\"/projects\" className=\"flex items-center gap-2 text-gray-300 text-sm hover:text-emerald-500 transition-colors\">\n                        Ver todos\n                        <HiArrowNarrowRight />\n                    </Link>\n                </p>\n\n            </div>\n\n        </section>\n    )\n}","import React from \"react\";\nimport { getRelativeTimeString } from \"../utils/relative-times\";\nimport { IconSvg } from \"../utils/icon-svg\";\nimport { FaCode } from \"react-icons/fa\";\n\ninterface KnowTechProps {\n    tech: {\n        name: string\n        startDate: string\n    }\n}\n\n\n\nexport const KnowTech: React.FC<KnowTechProps> = ({ tech }) => {\n\n    const relativeTime = getRelativeTimeString(\n        new Date(tech.startDate),\n        'pt-BR',\n      ).replace('há ', '')\n\n    return (\n        <div className=\"p-6 rounded-lg bg-gray-600/20 text-gray-500 flex flex-col gap-2 hover:text-emerald-500 hover:bg-gray-600/30 transition-all\">\n            <div className=\"flex items-center justify-between\">\n                <p className=\"font-medium\">{tech.name}</p>\n                <FaCode />\n            </div>\n            <span>{relativeTime} de experiência</span>\n        </div>\n    )\n}\n","/**\n * Convert a date to a relative time string, such as\n * \"a minute ago\", \"in 2 hours\", \"yesterday\", \"3 months ago\", etc.\n * using Intl.RelativeTimeFormat\n */\nexport function getRelativeTimeString(\n  date: Date | number,\n  lang = navigator.language,\n): string {\n  // Allow dates or times to be passed\n  const timeMs = typeof date === 'number' ? date : date.getTime()\n\n  // Get the amount of seconds between the given date and now\n  const deltaSeconds = Math.round((timeMs - Date.now()) / 1000)\n\n  // Array reprsenting one minute, hour, day, week, month, etc in seconds\n  const cutoffs = [\n    60,\n    3600,\n    86400,\n    86400 * 7,\n    86400 * 30,\n    86400 * 365,\n    Infinity,\n  ]\n\n  // Array equivalent to the above but in the string representation of the units\n  const units: Intl.RelativeTimeFormatUnit[] = [\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'week',\n    'month',\n    'year',\n  ]\n\n  // Grab the ideal cutoff unit\n  const unitIndex = cutoffs.findIndex(\n    (cutoff) => cutoff > Math.abs(deltaSeconds),\n  )\n\n  // Get the divisor to divide from the seconds. E.g. if our unit is \"day\" our divisor\n  // is one day in seconds, so we can divide our seconds by this to get the # of days\n  const divisor = unitIndex ? cutoffs[unitIndex - 1] : 1\n\n  // Intl.RelativeTimeFormat do its magic\n  const rtf = new Intl.RelativeTimeFormat(lang, { numeric: 'auto' })\n  return rtf.format(Math.floor(deltaSeconds / divisor), units[unitIndex])\n}","import React from \"react\";\nimport { SectionTitle } from \"../section-title\";\nimport { HorizontalDivider } from \"../divider-h\";\nimport { KnowTech } from \"../know-tech\";\nimport { motion } from \"framer-motion\";\n\n\n\nexport const KnowTechs = () => {\n\n    const techsData = [\n        { name: \"React\", startDate: \"2023-05-29\" },\n        { name: \"Node.js\",  startDate: \"2020-05-27\" },\n        { name: \"Python\",  startDate: \"2024-02-20\" },\n        { name: \"Tailwind\",  startDate: \"2022-05-23\" },\n        { name: \"Typescript\",  startDate: \"2020-05-27\" },\n        { name: \"C++\",  startDate: \"2024-02-20\" },\n        { name: \"Django\",  startDate: \"2022-05-23\" },\n    ]\n\n\n    return (\n        <section className=\"container py-16\">\n            <SectionTitle title=\"Conhecimentos\" section=\"competencias\" className=\"\"/>\n            <HorizontalDivider className=\"mb-16\" />\n            <div className=\"grid grid-cols-[repeat(auto-fit,minmax(265px,1fr))] gap-3 mt-[60px]\">\n            {techsData.map((tech, index) => (\n                <motion.div\n                key={ index }\n                initial={{opacity:0, x: -100}}\n                whileInView={{opacity:1, x:0}}\n                exit={{opacity:0, x: -100}}\n                transition={{duration:0.15, delay: index * 0.1}}\n                >\n                <KnowTech  tech={tech} />\n                </motion.div>\n            ))}\n        </div>\n        </section >\n    )\n}","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport function differenceInCalendarYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  return _dateLeft.getFullYear() - _dateRight.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos de um segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"meio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos de um minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"cerca de 1 hora\",\n    other: \"cerca de {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 dia\",\n    other: \"{{count}} dias\",\n  },\n\n  aboutXWeeks: {\n    one: \"cerca de 1 semana\",\n    other: \"cerca de {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"cerca de 1 mês\",\n    other: \"cerca de {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 mês\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"cerca de 1 ano\",\n    other: \"cerca de {{count}} anos\",\n  },\n\n  xYears: {\n    one: \"1 ano\",\n    other: \"{{count}} anos\",\n  },\n\n  overXYears: {\n    one: \"mais de 1 ano\",\n    other: \"mais de {{count}} anos\",\n  },\n\n  almostXYears: {\n    one: \"quase 1 ano\",\n    other: \"quase {{count}} anos\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"em \" + result;\n    } else {\n      return \"há \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM 'de' y\",\n  long: \"d 'de' MMMM 'de' y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'às' {{time}}\",\n  long: \"{{date}} 'às' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const weekday = date.getDay();\n    const last = weekday === 0 || weekday === 6 ? \"último\" : \"última\";\n    return \"'\" + last + \"' eeee 'às' p\";\n  },\n  yesterday: \"'ontem às' p\",\n  today: \"'hoje às' p\",\n  tomorrow: \"'amanhã às' p\",\n  nextWeek: \"eeee 'às' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n","import { formatDistance } from \"./pt-BR/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./pt-BR/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./pt-BR/_lib/formatRelative.mjs\";\nimport { localize } from \"./pt-BR/_lib/localize.mjs\";\nimport { match } from \"./pt-BR/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Portuguese locale (Brazil).\n * @language Portuguese\n * @iso-639-2 por\n * @author Lucas Duailibe [@duailibe](https://github.com/duailibe)\n * @author Yago Carballo [@yagocarballo](https://github.com/YagoCarballo)\n */\nexport const ptBR = {\n  code: \"pt-BR\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ptBR;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"AC\", \"DC\"],\n  abbreviated: [\"AC\", \"DC\"],\n  wide: [\"antes de cristo\", \"depois de cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan\",\n    \"fev\",\n    \"mar\",\n    \"abr\",\n    \"mai\",\n    \"jun\",\n    \"jul\",\n    \"ago\",\n    \"set\",\n    \"out\",\n    \"nov\",\n    \"dez\",\n  ],\n\n  wide: [\n    \"janeiro\",\n    \"fevereiro\",\n    \"março\",\n    \"abril\",\n    \"maio\",\n    \"junho\",\n    \"julho\",\n    \"agosto\",\n    \"setembro\",\n    \"outubro\",\n    \"novembro\",\n    \"dezembro\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n  short: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"sab\"],\n  abbreviated: [\n    \"domingo\",\n    \"segunda\",\n    \"terça\",\n    \"quarta\",\n    \"quinta\",\n    \"sexta\",\n    \"sábado\",\n  ],\n\n  wide: [\n    \"domingo\",\n    \"segunda-feira\",\n    \"terça-feira\",\n    \"quarta-feira\",\n    \"quinta-feira\",\n    \"sexta-feira\",\n    \"sábado\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"manhã\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manhã\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manhã\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"da manhã\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manhã\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manhã\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  if (options?.unit === \"week\") {\n    return number + \"ª\";\n  }\n  return number + \"º\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)[ºªo]?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|d\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|depois de cristo)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [/^antes de cristo/i, /^depois de cristo/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](º)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmajsond]/i,\n  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,\n  wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^fev/i,\n    /^mar/i,\n    /^abr/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^ago/i,\n    /^set/i,\n    /^out/i,\n    /^nov/i,\n    /^dez/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(dom|[23456]ª?|s[aá]b)/i,\n  short: /^(dom|[23456]ª?|s[aá]b)/i,\n  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,\n  wide: /^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i,\n};\nconst parseDayPatterns = {\n  short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],\n  narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],\n  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[aá]b/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i,\n  any: /^([ap]\\.?\\s?m\\.?|meia[-\\s]noite|meio[-\\s]dia|(da) (manhã|tarde|noite))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn|^meia[-\\s]noite/i,\n    noon: /^md|^meio[-\\s]dia/i,\n    morning: /manhã/i,\n    afternoon: /tarde/i,\n    evening: /tarde/i,\n    night: /noite/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import React from \"react\";\nimport { format, differenceInMonths, differenceInYears } from \"date-fns\";\nimport { ptBR } from 'date-fns/locale';\nimport { motion } from \"framer-motion\";\nimport { Link } from \"gatsby\";\nimport { Badge } from \"./badge\";\n\ninterface WorkExperienceProps {\n    work: {\n        companyName: string;\n        companyUrl: string;\n        companyLogo: string; // Aqui está correto, companyLogo em camelCase\n        description?: string;\n        endDate: string;\n        role: string;\n        startDate: string;\n        technologies: string[];\n    };\n}\n\nexport const WorkExperienceItem: React.FC<WorkExperienceProps> = ({ work }) => {\n    const startDate = new Date(work.startDate);\n    const formattedStartDate = format(startDate, 'MMM yyyy', { locale: ptBR });\n    const formattedEndDate = work.endDate\n        ? format(new Date(work.endDate), 'MMM yyyy', { locale: ptBR })\n        : 'Atualmente';\n\n    const end = work.endDate ? new Date(work.endDate) : new Date();\n    const months = differenceInMonths(end, startDate);\n    const years = differenceInYears(end, startDate);\n    const monthsRemaining = months % 12;\n\n    const formattedDuration =\n        years > 0\n            ? `${years} ano${years > 1 ? 's' : ''}${monthsRemaining > 0\n                ? ` e ${monthsRemaining} mês${monthsRemaining > 1 ? 'es' : ''}`\n                : ''\n            }`\n            : `${months} mês${months > 1 ? 'es' : ''}`;\n\n    return (\n        <motion.div\n            className=\"grid grid-cols-[40px,1fr] gap-4 md:gap-10\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n            transition={{ duration: 0.5 }}\n        >\n            <div className=\"flex items-center flex-col gap-4\">\n                <div className=\"rounded-lg border border-gray-500 p-0.5\">\n                    <img\n                        src='/icons/icon-48x48.png'\n                        width={40}\n                        height={40}\n                        className=\"rounded-lg object-contain h-full w-full\"\n                        alt={`Logo da empresa ${work.companyName}`}\n                    />\n                </div>\n\n                <div className=\"h-full w-[1px] bg-gray-800\" />\n            </div>\n\n            <div>\n                <div className=\"flex flex-col gap-2 text-sm sm:text-base\">\n                    <Link\n                        to={work.companyUrl}\n                        target=\"_blank\"\n                        className=\"text-gray-500 hover:text-emerald-500 transition-colors\"\n                    >\n                        @ {work.companyName}\n                    </Link>\n                    <h4 className=\"text-gray-300\">{work.role}</h4>\n                    <span className=\"text-gray-500\">\n                        {formattedStartDate} • {formattedEndDate} • ({formattedDuration})\n                    </span>\n\n                    <p className=\"text-gray-400\">{work.description}</p>\n                </div>\n\n                <p className=\"text-gray-400 text-sm mb-3 mt-6 font-semibold\">Competências</p>\n                <div className=\"flex gap-x-2 gap-y-3 flex-wrap lg:max-w-[350] mb-8\">\n                    {work.technologies.map((tech, i) => (\n                        <Badge\n                            key={i}\n                            tech={tech}\n                            initial={{ opacity: 0, scale: 0 }}\n                            whileInView={{ opacity: 1, scale: 1 }}\n                            exit={{ opacity: 0, scale: 0 }}\n                            transition={{ duration: 0.2, delay: 0.5 + i * 0.1 }}\n                        />\n                    ))}\n                </div>\n            </div>\n        </motion.div>\n    );\n};\n\nexport default WorkExperienceItem;\n","import React from \"react\";\nimport { SectionTitle } from \"../section-title\";\nimport { WorkExperienceItem } from \"../work-experience\";\n\nconst WorkExperience = () => {\n    const workExperienceData = [\n        {\n            companyName: \"Tech Solutions Inc.\",\n            companyUrl: \"https://t4.ftcdn.net/jpg/07/04/77/31/240_F_704773105_g7Av00xoHGhbDye1tFEIMTYn0cog7eOk.jpg\",\n            companyLogo: \"https://t4.ftcdn.net/jpg/07/04/77/31/240_F_704773105_g7Av00xoHGhbDye1tFEIMTYn0cog7eOk.jpg\",\n            description: \"Trabalhei como desenvolvedor full-stack, participando de projetos de grande escala.\",\n            endDate: \"2023-05-31\",\n            role: \"Desenvolvedor Full-Stack\",\n            startDate: \"2020-09-01\",\n            technologies: [\"JavaScript\", \"TypeScript\", \"React\", \"Node.js\", \"MongoDB\"]\n        },\n        {\n            companyName: \"Web Development Co.\",\n            companyUrl: \"https://i.pinimg.com/736x/28/08/c2/2808c2a15aa639d7f66866c123e76144.jpg\",\n            companyLogo: \"https://i.pinimg.com/736x/28/08/c2/2808c2a15aa639d7f66866c123e76144.jpg\",\n            description: \"Desenvolvi e mantive aplicações web para clientes diversos.\",\n            endDate: \"2020-08-15\",\n            role: \"Desenvolvedor Front-End\",\n            startDate: \"2018-03-15\",\n            technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"Angular\"]\n        }\n    ];\n\n    return (\n        <section className=\"container py-16 flex gap-10 md:gap-4 lg:gap-16 flex-col md:flex-row\">\n            <div className=\"max-w-[420px]\">\n                <SectionTitle section=\"experiencias\" title=\"Experiência profissional\" />\n                <p className=\"text-gray-400 mt-6\">\n                    Estou sempre aberto a novos desafios e projetos emocionantes. Vamos trabalhar juntos para criar soluções incríveis para sua empresa!\n                </p>\n            </div>\n\n            <div className=\"flex flex-col gap-4\">\n                {workExperienceData.map((work) => (\n                    <div key={work.companyName}>\n                        <WorkExperienceItem work={work} />\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default WorkExperience;\n","import * as React from \"react\"\nimport { type HeadFC, type PageProps } from \"gatsby\"\nimport { RootLayout } from '../components/layout'\nimport { HeroSection } from \"../components/home/hero-section\"\nimport { HighLightedProjects } from \"../components/home/highlighted-section\"\nimport { KnowTechs } from \"../components/home/know-techs-section\"\nimport WorkExperience from \"../components/home/work-experience-section\"\n\n\n\n\n\nconst IndexPage: React.FC<PageProps> = ( ) => {\n\n  return (\n    <RootLayout>\n      <HeroSection/>\n      <KnowTechs/>\n      <HighLightedProjects/>\n      <WorkExperience/>\n    </RootLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Amauy Gomes</title>\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","V","B","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","key","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","_excluded2","ne","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","SectionTitle","title","section","animProps","initial","whileInView","exit","cn","motion","span","duration","h3","delay","Badge","tech","HeroSection","div","name","scale","Link","to","Button","GrDocumentDownload","target","FaFacebook","FaWhatsapp","FaGithub","FaLinkedin","y","ProjectCard","p","HiArrowNarrowRight","HorizontalDivider","HighLightedProjects","KnowTech","relativeTime","date","lang","navigator","language","timeMs","getTime","deltaSeconds","Math","round","Date","now","cutoffs","Infinity","unitIndex","findIndex","cutoff","abs","divisor","Intl","RelativeTimeFormat","numeric","format","floor","getRelativeTimeString","startDate","FaCode","KnowTechs","index","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","array","predicate","pattern","object","Object","hasOwnProperty","call","findKey","valueCallback","buildMatchPatternFn","parseResult","parsePattern","enUS","code","formatDistance","token","count","tokenValue","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parseInt","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","constructFrom","startOfYear","cleanDate","setFullYear","getDayOfYear","startOfWeek","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","padStart","lightFormatters","signedYear","M","d","a","dayPeriodEnumValue","h","H","s","S","numberOfDigits","milliseconds","trunc","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","b","hours","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isDate","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","_message","subject","message","includes","warnOrThrowProtectedError","formatter","matched","compareAsc","_dateLeft","_dateRight","differenceInCalendarMonths","endOfDay","endOfMonth","isLastDayOfMonth","differenceInMonths","difference","setMonth","isLastMonthNotFull","differenceInCalendarYears","differenceInYears","weekday","ptBR","WorkExperienceItem","work","formattedStartDate","formattedEndDate","endDate","end","months","years","monthsRemaining","formattedDuration","companyName","companyUrl","description","technologies","companyLogo","RootLayout","WorkExperience","Head"],"sourceRoot":""}